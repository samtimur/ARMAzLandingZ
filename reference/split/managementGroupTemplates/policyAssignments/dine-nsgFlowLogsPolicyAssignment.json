{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "metadata": {
                "description": "Provide the company prefix to the root management group containing the policy definitions."
            }
        },
        "nsgRegion": {
            "type": "String",
            "metadata": {
                "displayName": "NSG Region",
                "description": "This Policy will review NSGs only in the selected region. You can create other assignments to include other regions.",
                "strongType": "location"
            }
        },
        "enforcementMode": {
            "type": "string",
            "allowedValues": [
                "Default",
                "DoNotEnforce"
            ],
            "defaultValue": "Default"
        },
        "storageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "Provide the resourceId for the storage account."
            }
        },
        "rgName": {
            "type": "String",
            "metadata": {
                "displayName": "Network Watchers RG",
                "description": "The name of the resource group where the flowLog resources will be created. This will be used only if a deployment is required. This is the resource group where the Network Watchers are located.",
                "strongType": "existingResourceGroups"
            }
        },
        "networkWatcher": {
            "type": "String",
            "metadata": {
                "displayName": "Network Watcher name",
                "description": "The name of the network watcher under which the flowLog resources will be created. Make sure it belongs to the same region as the NSG."
            }
        }
    },
    "variables": {
        "policyDefinitions": {
            "deployNsgFlowLogs": "/providers/Microsoft.Authorization/policyDefinitions/0db34a60-64f4-4bf6-bd44-f95c16cf34b9"
        },
        "policyAssignmentNames": {
            "nsgFlowLogs": "Deploy-Nsg-Flow-Logs",
            "description": "Deploy a flow log resource with target network security group",
            "displayName": "Deploy a flow log resource with target network security group"
        },
        "contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
        "roleAssignmentNames": {
            "deployNsgFlowLogs": "[guid(concat(parameters('topLevelManagementGroupPrefix'), variables('policyAssignmentNames').nsgFlowLogs))]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2020-09-01",
            "name": "[variables('policyAssignmentNames').nsgFlowLogs]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "[variables('policyAssignmentNames').description]",
                "displayName": "[variables('policyAssignmentNames').displayName]",
                "policyDefinitionId": "[variables('policyDefinitions').deployNsgFlowLogs]",
                "enforcementMode": "[parameters('enforcementMode')]",
                "parameters": {
                    "nsgRegion": {
                        "value": "[parameters('nsgRegion')]"
                    },
                    "storageId": {
                        "value": "[parameters('storageAccountResourceId')]"
                    },
                    "networkWatcherRG": {
                        "value": "[parameters('rgName')]"
                    },
                    "networkWatcherName": {
                        "value": "[parameters('networkWatcher')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('roleAssignmentNames').deployNsgFlowLogs]",
            "dependsOn": [
                "[variables('policyAssignmentNames').nsgFlowLogs]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/providers/Microsoft.Authorization/roleDefinitions/', variables('contributor'))]",
                "principalId": "[toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').nsgFlowLogs), '2020-09-01', 'Full' ).identity.principalId)]"
            }
        }
    ],
    "outputs": {}
}