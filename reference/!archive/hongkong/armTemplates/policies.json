{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "companyPrefix": {
      "type": "string",
      "maxLength": 5
    }
  },
  "variables": {
    "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('companyPrefix'))]",
    "apiVersions": {
      "policyDefinitions": "2020-03-01",
      "policySetDefinitions": "2020-03-01"
    },
    "policies": {
      "policyDefinitions": [
        {
          "properties": {
            "displayName": "AppService append enable https only setting to enforce https setting.",
            "mode": "All",
            "description": "Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "notequals": true
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": [
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "value": true
                  }
                ]
              }
            }
          },
          "name": "append-app-service-httpsonly"
        },
        {
          "properties": {
            "displayName": "AppService append sites with minimum TLS version to enforce.",
            "mode": "All",
            "description": "Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "minTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.0",
                  "1.1"
                ],
                "metadata": {
                  "displayName": "Select version minimum TLS Web App config",
                  "description": "Select version  minimum TLS version for a  Web App config to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites/config"
                  },
                  {
                    "field": "Microsoft.Web/sites/config/minTlsVersion",
                    "notEquals": "[[parameters('minTlsVersion')]"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": [
                  {
                    "field": "Microsoft.Web/sites/config/minTlsVersion",
                    "value": "[[parameters('minTlsVersion')]"
                  }
                ]
              }
            }
          },
          "name": "append-app-service-latest-tls"
        },
        {
          "properties": {
            "displayName": "API App should only be accessible over HTTPS",
            "mode": "Indexed",
            "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "kind",
                    "like": "*api"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "equals": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-app-service-apiapp-http"
        },
        {
          "properties": {
            "displayName": "Function App should only be accessible over HTTPS",
            "mode": "Indexed",
            "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "kind",
                    "like": "functionapp*"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "equals": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-app-service-function-app-http"
        },
        {
          "properties": {
            "displayName": "Web Application should only be accessible over HTTPS",
            "mode": "Indexed",
            "description": "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.",
            "metadata": {
              "version": "1.0.0",
              "category": "App Service"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "field": "kind",
                    "like": "app*"
                  },
                  {
                    "field": "Microsoft.Web/sites/httpsOnly",
                    "equals": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-app-service-web-app-http"
        },
        {
          "properties": {
            "displayName": "MySQL database servers enforce SSL connections.",
            "mode": "Indexed",
            "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_0",
                  "TLS1_1",
                  "TLSEnforcementDisabled"
                ],
                "metadata": {
                  "displayName": "Select version minimum TLS for MySQL server",
                  "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforMySQL/servers"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                        "exists": "false"
                      },
                      {
                        "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                        "notEquals": "Enabled"
                      },
                      {
                        "field": "Microsoft.DBforMySQL/servers/minimalTlsVersion",
                        "notequals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-mysql-http"
        },
        {
          "properties": {
            "displayName": "Azure Database for MySQL server deploy a specific min TLS version and enforce SSL.",
            "mode": "Indexed",
            "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect minimum TLS version Azure Database for MySQL server",
                  "description": "Enable or disable the execution of the policy minimum TLS version Azure Database for MySQL server"
                }
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_0",
                  "TLS1_1",
                  "TLSEnforcementDisabled"
                ],
                "metadata": {
                  "displayName": "Select version minimum TLS for MySQL server",
                  "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforMySQL/servers"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                        "notEquals": "Enabled"
                      },
                      {
                        "field": "Microsoft.DBforMySQL/servers/minimalTlsVersion",
                        "notequals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.DBforMySQL/servers",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.DBforMySQL/servers/sslEnforcement",
                        "equals": "Enabled"
                      },
                      {
                        "field": "Microsoft.DBforMySQL/servers/minimalTlsVersion",
                        "equals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "minimalTlsVersion": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DBforMySQL/servers",
                            "apiVersion": "2017-12-01",
                            "name": "[[concat(parameters('resourceName'))]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "sslEnforcement": "[[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]",
                              "minimalTlsVersion": "[[parameters('minimalTlsVersion')]"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "minimalTlsVersion": {
                          "value": "[[parameters('minimalTlsVersion')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-mysql-ssl-enforcement"
        },
        {
          "properties": {
            "displayName": "PostgreSQL database servers enforce SSL connection.",
            "mode": "Indexed",
            "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.1",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_0",
                  "TLS1_1",
                  "TLSEnforcementDisabled"
                ],
                "metadata": {
                  "displayName": "Select version minimum TLS for MySQL server",
                  "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforPostgreSQL/servers"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                        "exists": "false"
                      },
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                        "notEquals": "Enabled"
                      },
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                        "notequals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-postgresql-http"
        },
        {
          "properties": {
            "displayName": "Azure Database for PostgreSQL server deploy a specific min TLS version requirement and enforce SSL ",
            "mode": "Indexed",
            "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect Azure Database for PostgreSQL server",
                  "description": "Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server"
                }
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_0",
                  "TLS1_1",
                  "TLSEnforcementDisabled"
                ],
                "metadata": {
                  "displayName": "Select version for PostgreSQL server",
                  "description": "Select version minimum TLS version Azure Database for PostgreSQL server to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforPostgreSQL/servers"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                        "notEquals": "Enabled"
                      },
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                        "notEquals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.DBforPostgreSQL/servers",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
                        "equals": "Enabled"
                      },
                      {
                        "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
                        "equals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  },
                  "name": "current",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "minimalTlsVersion": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DBforPostgreSQL/servers",
                            "apiVersion": "2017-12-01",
                            "name": "[[concat(parameters('resourceName'))]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "sslEnforcement": "[[if(equals(parameters('minimalTlsVersion'), 'TLSEnforcementDisabled'),'Disabled', 'Enabled')]",
                              "minimalTlsVersion": "[[parameters('minimalTlsVersion')]"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "minimalTlsVersion": {
                          "value": "[[parameters('minimalTlsVersion')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-postgresql-ssl-enforcement"
        },
        {
          "properties": {
            "displayName": "Azure Cache for Redis only secure connections should be enabled",
            "mode": "Indexed",
            "description": "Audit enabling of only connections via SSL to Azure Cache for Redis. Validate both minimum TLS version and enableNonSslPort is disabled. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
            "metadata": {
              "version": "1.0.0",
              "category": "Cache"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "The effect determines what happens when the policy rule is evaluated to match"
                }
              },
              "minimumTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.1",
                  "1.0"
                ],
                "metadata": {
                  "displayName": "Select minumum TLS version for Azure Cache for Redis.",
                  "description": "Select minimum TLS version for Azure Cache for Redis."
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Cache/redis"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Cache/Redis/enableNonSslPort",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                        "notequals": "[[parameters('minimumTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-redis-http"
        },
        {
          "properties": {
            "displayName": "Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled.",
            "mode": "Indexed",
            "description": "Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "Cache"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled",
                  "Modify"
                ],
                "metadata": {
                  "displayName": "Effect Azure Cache for Redis",
                  "description": "Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Cache/redis"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Cache/Redis/enableNonSslPort",
                        "equals": "true"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": [
                  {
                    "field": "Microsoft.Cache/Redis/enableNonSslPort",
                    "value": false
                  }
                ]
              }
            }
          },
          "name": "append-redis-disable-non-ssl-port"
        },
        {
          "properties": {
            "displayName": "Azure Cache for Redis Append a specific min TLS version requirement and enforce TLS.",
            "mode": "Indexed",
            "description": "Append a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "Cache"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect Azure Cache for Redis",
                  "description": "Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis"
                }
              },
              "minimumTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.1",
                  "1.0"
                ],
                "metadata": {
                  "displayName": "Select version for Redis server",
                  "description": "Select version minimum TLS version Azure Cache for Redis to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Cache/redis"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                        "notequals": "[[parameters('minimumTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": [
                  {
                    "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                    "value": "[[parameters('minimumTlsVersion')]"
                  }
                ]
              }
            }
          },
          "name": "append-redis-ssl-enforcement"
        },
        {
          "properties": {
            "displayName": "SQL Managed Instance should have the minimal TLS version set to the highest version",
            "description": "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "defaultValue": "Audit"
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.1",
                  "1.0"
                ],
                "metadata": {
                  "displayName": "Select version for SQL server",
                  "description": "Select version minimum TLS version SQL servers to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Sql/managedInstances"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                        "exists": "false"
                      },
                      {
                        "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                        "notequals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-sqlmi-min-tls"
        },
        {
          "properties": {
            "displayName": "SQL managed instances deploy a specific min TLS version requirement.",
            "mode": "Indexed",
            "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL managed instances. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect SQL servers",
                  "description": "Enable or disable the execution of the policy minimum TLS version SQL servers"
                }
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.1",
                  "1.0"
                ],
                "metadata": {
                  "displayName": "Select version for SQL server",
                  "description": "Select version minimum TLS version SQL servers to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Sql/managedInstances"
                  },
                  {
                    "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                    "notequals": "[[parameters('minimalTlsVersion')]"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Sql/managedInstances",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                        "equals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  },
                  "name": "current",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "minimalTlsVersion": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Sql/managedInstances",
                            "apiVersion": "2020-02-02-preview",
                            "name": "[[concat(parameters('resourceName'))]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "minimalTlsVersion": "[[parameters('minimalTlsVersion')]"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "minimalTlsVersion": {
                          "value": "[[parameters('minimalTlsVersion')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-sqlmi-min-tls"
        },
        {
          "properties": {
            "displayName": "Azure SQL Database should have the minimal TLS version set to the highest version",
            "description": "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ],
                "defaultValue": "Audit"
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.1",
                  "1.0"
                ],
                "metadata": {
                  "displayName": "Select version for SQL server",
                  "description": "Select version minimum TLS version SQL servers to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Sql/servers/minimalTlsVersion",
                        "exists": "false"
                      },
                      {
                        "field": "Microsoft.Sql/servers/minimalTlsVersion",
                        "notequals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-sql-min-tls"
        },
        {
          "properties": {
            "displayName": "SQL servers deploys a specific min TLS version requirement.",
            "mode": "Indexed",
            "description": "Deploys a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect SQL servers",
                  "description": "Enable or disable the execution of the policy minimum TLS version SQL servers"
                }
              },
              "minimalTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.1",
                  "1.0"
                ],
                "metadata": {
                  "displayName": "Select version for SQL server",
                  "description": "Select version minimum TLS version SQL servers to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers"
                  },
                  {
                    "field": "Microsoft.Sql/servers/minimalTlsVersion",
                    "notequals": "[[parameters('minimalTlsVersion')]"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Sql/servers",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Sql/servers/minimalTlsVersion",
                        "equals": "[[parameters('minimalTlsVersion')]"
                      }
                    ]
                  },
                  "name": "current",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "minimalTlsVersion": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Sql/servers",
                            "apiVersion": "2019-06-01-preview",
                            "name": "[[concat(parameters('resourceName'))]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "minimalTlsVersion": "[[parameters('minimalTlsVersion')]"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "minimalTlsVersion": {
                          "value": "[[parameters('minimalTlsVersion')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-sql-min-tls"
        },
        {
          "properties": {
            "displayName": "Storage Account set to minumum TLS and Secure transfer should be enabled",
            "mode": "Indexed",
            "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking",
            "metadata": {
              "version": "1.0.0",
              "category": "Storage"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "The effect determines what happens when the policy rule is evaluated to match"
                }
              },
              "minimumTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_1",
                  "TLS1_0"
                ],
                "metadata": {
                  "displayName": "Storage Account select minimum TLS version",
                  "description": "Select version  minimum TLS version on Azure Storage Account to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Storage/storageAccounts"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "value": "[[requestContext().apiVersion]",
                            "less": "2019-04-01"
                          },
                          {
                            "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                            "exists": "false"
                          }
                        ]
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "equals": "false"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                        "notequals": "[[parameters('minimumTlsVersion')]"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                        "exists": "false"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-storage-min-tls"
        },
        {
          "properties": {
            "displayName": "Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS ",
            "mode": "Indexed",
            "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure STorage. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.",
            "metadata": {
              "version": "1.0.0",
              "category": "Storage"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect Azure STorage",
                  "description": "Enable or disable the execution of the policy minimum TLS version Azure STorage"
                }
              },
              "minimumTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_1",
                  "TLS1_0"
                ],
                "metadata": {
                  "displayName": "Select version for PostgreSQL server",
                  "description": "Select version minimum TLS version Azure STorage to enforce"
                }
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Storage/storageAccounts"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "notEquals": "true"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                        "notEquals": "[[parameters('minimumTlsVersion')]"
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.DBforPostgreSQL/servers",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
                        "equals": "[[parameters('minimumTlsVersion')]"
                      },
                      {
                        "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                        "equals": "false"
                      }
                    ]
                  },
                  "name": "current",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "String"
                          },
                          "minimumTlsVersion": {
                            "type": "String"
                          },
                          "location": {
                            "type": "String"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2019-06-01",
                            "name": "[[concat(parameters('resourceName'))]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "supportsHttpsTrafficOnly": true,
                              "minimumTlsVersion": "[[parameters('minimumTlsVersion')]"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "minimumTlsVersion": {
                          "value": "[[parameters('minimumTlsVersion')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-storage-ssl-enforcement"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Automation to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Automation/automationAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "JobLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "JobStreams",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DscNodeStatus",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-aa"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Azure AD Domain Services to stream to a Log Analytics workspace when any Azure AD Domain Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Azure AD Domain Services to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.AAD/domainServices"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.AAD/domainServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "SystemSecurity",
                                  "enabled": true
                                },
                                {
                                  "category": "AccountManagement",
                                  "enabled": true
                                },
                                {
                                  "category": "LogonLogoff",
                                  "enabled": true
                                },
                                {
                                  "category": "ObjectAccess",
                                  "enabled": true
                                },
                                {
                                  "category": "PolicyChange",
                                  "enabled": true
                                },
                                {
                                  "category": "PrivilegeUse",
                                  "enabled": true
                                },
                                {
                                  "category": "DetailTracking",
                                  "enabled": true
                                },
                                {
                                  "category": "DirectoryServiceAccess",
                                  "enabled": true
                                },
                                {
                                  "category": "AccountLogon",
                                  "enabled": true
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-aadds"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.",
            "DisplayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.ContainerInstance/containerGroups"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-aci"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.",
            "DisplayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.ContainerRegistry/registries"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ContainerRegistryLoginEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ContainerRegistryRepositoryEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-acr"
        },
        {
          "Properties": {
            "Description": "Ensures that Activity Log Diagnostics settings are set to push logs into a Storage Account for Long term retention",
            "DisplayName": "Deploy Diagnostic Settings for Azure Activity Logs to Storage Account",
            "Mode": "All",
            "Parameters": {
              "storageAccountId": {
                "type": "String",
                "metadata": {
                  "displayName": "Storage Account resource ID",
                  "description": "Select Storage account from dropdown list. If this account is outside of the scope of the assignment you must manually grant 'Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "Microsoft.Storage/storageAccounts"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "deployIfNotExists",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/storageAccountId",
                        "equals": "[[parameters('storageAccountId')]"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "storageAccountId": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {

                            "type": "Microsoft.Insights/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "subscriptionLogsToStorage",
                            "location": "Global",
                            "properties": {
                              "storageAccountId": "[[parameters('storageAccountId')]",
                              "logs": [
                                {
                                  "category": "Administrative",
                                  "enabled": true
                                },
                                {
                                  "category": "Security",
                                  "enabled": true
                                },
                                {
                                  "category": "ServiceHealth",
                                  "enabled": true
                                },
                                {
                                  "category": "Alert",
                                  "enabled": true
                                },
                                {
                                  "category": "Recommendation",
                                  "enabled": true
                                },
                                {
                                  "category": "Policy",
                                  "enabled": true
                                },
                                {
                                  "category": "Autoscale",
                                  "enabled": true
                                },
                                {
                                  "category": "ResourceHealth",
                                  "enabled": true
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "storageAccountId": {
                          "value": "[[parameters('storageAccountId')]"
                        }
                      }
                    }
                  },
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
                  ]
                }
              }
            }
          },
          "Name": "deploy-diagnostics-activity-log-sta"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled.",
            "DisplayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.ContainerService/managedClusters"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "kube-audit",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "kube-apiserver",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "kube-controller-manager",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "kube-scheduler",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "cluster-autoscaler",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "guard",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "kube-audit-admin",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-aks"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy will set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.AnalysisServices/servers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.AnalysisServices/servers/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Engine",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Service",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-analysis-service"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.ApiManagement/service"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.ApiManagement/service/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "GatewayLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-api-mgmt"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/applicationGateways"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/applicationGateways/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ApplicationGatewayAccessLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ApplicationGatewayPerformanceLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ApplicationGatewayFirewallLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-application-gateway"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Application Insights to stream to a Log Analytics workspace when any Application Insights which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "displayName": "Deploy Diagnostic Settings for Application Insights to Log Analytics workspace",
            "mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.AnalysisServices/servers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Insights/Components/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AppAvailabilityResults",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppBrowserTimings",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppMetrics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppDependencies",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppExceptions",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppPageViews",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppPerformanceCounters",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppRequests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppSystemEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppTraces",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-application-insights"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for App Service Environments to stream to a Log Analytics workspace when any App Service Environments which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for App Service Environments to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Web/hostingEnvironments"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Web/hostingEnvironments/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "AppServiceEnvironmentPlatformLogs",
                                  "enabled": true
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-ase"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Bastion to stream to a Log Analytics workspace when any Bastion which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Bastion to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/bastionHosts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/bastionHosts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "BastionAuditLogs",
                                  "enabled": true
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-bastion"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Batch/batchAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Batch/batchAccounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ServiceLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-batch"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Azure Storage blobs to stream to a Log Analytics workspace when any Azure Storage which is missing this diagnostic settings is created or updated.",
            "displayName": "Deploy Diagnostic Settings for Azure Storage blobs to Log Analytics workspace",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "[[parameters('profileName')]",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "[[parameters('logsEnabled')]"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "[[parameters('metricsEnabled')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/default/microsoft.insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Capacity",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                },
                                {
                                  "category": "Transaction",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "StorageRead",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageWrite",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageDelete",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-blob-storage"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Azure Storage files to stream to a regional Log Analytics workspace when any Azure Storage which is missing this diagnostic settings is created or updated.",
            "displayName": "Deploy Diagnostic Settings for Azure Storage files to Log Analytics workspace",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "defaultValue": "DeployIfNotExists"
              },
              "profileName": {
                "type": "String",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                },
                "defaultValue": "setByPolicy"
              },
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace",
                  "assignPermissions": true
                }
              },
              "metricsEnabled": {
                "type": "String",
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                },
                "allowedValues": [
                  "True",
                  "False"
                ],
                "defaultValue": "False"
              },
              "logsEnabled": {
                "type": "String",
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                },
                "allowedValues": [
                  "True",
                  "False"
                ],
                "defaultValue": "True"
              }
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "[[parameters('profileName')]",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "[[parameters('logsEnabled')]"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "[[parameters('metricsEnabled')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts/fileServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/default/microsoft.insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Capacity",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                },
                                {
                                  "category": "Transaction",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "StorageRead",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageWrite",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageDelete",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-file-storage"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Azure Storage tables to stream to a regional Log Analytics workspace when any Azure Storage which is missing this diagnostic settings is created or updated.",
            "displayName": "Deploy Diagnostic Settings for Azure Storage tables to Log Analytics workspace",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "defaultValue": "DeployIfNotExists"
              },
              "profileName": {
                "type": "String",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                },
                "defaultValue": "setByPolicy"
              },
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace",
                  "assignPermissions": true
                }
              },
              "metricsEnabled": {
                "type": "String",
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                },
                "allowedValues": [
                  "True",
                  "False"
                ],
                "defaultValue": "False"
              },
              "logsEnabled": {
                "type": "String",
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                },
                "allowedValues": [
                  "True",
                  "False"
                ],
                "defaultValue": "True"
              }
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "[[parameters('profileName')]",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "[[parameters('logsEnabled')]"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "[[parameters('metricsEnabled')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts/tableServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/default/microsoft.insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Capacity",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                },
                                {
                                  "category": "Transaction",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "StorageRead",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageWrite",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageDelete",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-table-storage"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Azure Storage queues to stream to a regional Log Analytics workspace when any Azure Storage which is missing this diagnostic settings is created or updated.",
            "displayName": "Deploy Diagnostic Settings for Azure Storage queues to Log Analytics workspace",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "defaultValue": "DeployIfNotExists"
              },
              "profileName": {
                "type": "String",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                },
                "defaultValue": "setByPolicy"
              },
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace",
                  "assignPermissions": true
                }
              },
              "metricsEnabled": {
                "type": "String",
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                },
                "allowedValues": [
                  "True",
                  "False"
                ],
                "defaultValue": "False"
              },
              "logsEnabled": {
                "type": "String",
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                },
                "allowedValues": [
                  "True",
                  "False"
                ],
                "defaultValue": "True"
              }
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "[[parameters('profileName')]",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "[[parameters('logsEnabled')]"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "[[parameters('metricsEnabled')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts/queueServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/default/microsoft.insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Capacity",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                },
                                {
                                  "category": "Transaction",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "StorageRead",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageWrite",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                },
                                {
                                  "category": "StorageDelete",
                                  "enabled": "[[parameters('logsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-queue-storage"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Cdn/profiles/endpoints"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "CoreAnalytics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('fullName')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-cdn-endpoints"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for CDN Profiles to stream to a Log Analytics workspace when any CDN Profiles which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for CDN Profiles to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Cdn/profiles"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Cdn/profiles/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": true,
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": false
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AzureCdnAccessLog",
                                  "enabled": true
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('fullName')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-cdn-profiles"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.CognitiveServices/accounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.CognitiveServices/accounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Audit",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "RequestResponse",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Trace",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-cognitive-services"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DocumentDB/databaseAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Requests",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "DataPlaneRequests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "MongoRequests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "QueryRuntimeStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "PartitionKeyStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "PartitionKeyRUConsumption",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ControlPlaneRequests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "CassandraRequests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "GremlinRequests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-cosmos-db"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Databricks/workspaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Databricks/workspaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "logs": [
                                {
                                  "category": "dbfs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "clusters",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "accounts",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "jobs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "notebook",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "ssh",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "workspace",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "secrets",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "sqlPermissions",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "instancePools",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-databricks"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DataFactory/factories"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DataFactory/factories/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ActivityRuns",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "PipelineRuns",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "TriggerRuns",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SSISPackageEventMessages",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SSISPackageExecutableStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SSISPackageEventMessageContext",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SSISPackageExecutionComponentPhases",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SSISPackageExecutionDataStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SSISIntegrationRuntimeLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-data-factory"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DataLakeAnalytics/accounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Audit",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Requests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-dl-analytics"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DataLakeStore/accounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DataLakeStore/accounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Audit",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Requests",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-data-lake-store"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.EventGrid/eventSubscriptions"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-event-grid-sub"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.EventGrid/topics"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.EventGrid/topics/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "DeliveryFailures",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "PublishFailures",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-event-grid-topic"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.EventHub/namespaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.EventHub/namespaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ArchiveLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "OperationalLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AutoScaleLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "KafkaCoordinatorLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "KafkaUserErrorLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "EventHubVNetConnectionEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "CustomerManagedKeyUserLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-event-hub"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.EventGrid/systemTopics"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.EventGrid/systemTopics/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "DeliveryFailures",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-event-grid-system-topic"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/expressRouteCircuits"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "PeeringRouteLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-expressroute"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/azureFirewalls"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AzureFirewallApplicationRule",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AzureFirewallNetworkRule",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AzureFirewallDnsProxy",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-firewall"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/frontDoors"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/frontDoors/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "FrontdoorAccessLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "FrontdoorWebApplicationFirewallLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-front-door"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "value": "[[field('kind')]",
                    "notEquals": "app"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "FunctionAppLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-function"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.HDInsight/clusters"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.HDInsight/clusters/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-hd-insight"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Devices/IotHubs"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Devices/IotHubs/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Connections",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DeviceTelemetry",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "C2DCommands",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DeviceIdentityOperations",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "FileUploadOperations",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Routes",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "D2CTwinOperations",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "C2DTwinOperations",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "TwinQueries",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "JobsOperations",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DirectMethods",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DistributedTracing",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Configurations",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DeviceStreams",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-iot-hub"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.KeyVault/vaults"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "name": "setByPolicy",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AuditEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-Key-vault"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/loadBalancers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/loadBalancers/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "LoadBalancerAlertEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "LoadBalancerProbeHealthStatus",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-load-balancer"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Log Analytics Workspace to stream to a Log Analytics workspace when any Log Analytics Workspace which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Log Analytics Workspace to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.OperationalInsights/Workspaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.OperationalInsights/Workspaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": true,
                                  "retentionPolicy": {
                                    "enabled": false,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Audit",
                                  "enabled": true
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-log-analytics-workspace"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Logic/integrationAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Logic/integrationAccounts/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "IntegrationAccountTrackingEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-logic-apps-ise"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Logic/workflows"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Logic/workflows/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "WorkflowRuntime",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-logic-apps-wf"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DBforMariaDB/servers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DBforMariaDB/servers/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "MySqlSlowLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "MySqlAuditLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-maria-db"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.MachineLearningServices/workspaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Run",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                },
                                {
                                  "category": "Model",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  }
                                },
                                {
                                  "category": "Quota",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                },
                                {
                                  "category": "Resource",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AmlComputeClusterEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AmlComputeClusterNodeEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AmlComputeJobEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AmlComputeCpuGpuUtilization",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AmlRunStatusChangedEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-ml-workspace"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DBforMySQL/servers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DBforMySQL/servers/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "MySqlSlowLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "MySqlAuditLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-mysql"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/networkInterfaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkInterfaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-nic"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/networkSecurityGroups"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "NetworkSecurityGroupEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "NetworkSecurityGroupRuleCounter",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-network-security-groups"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/publicIPAddresses"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/publicIPAddresses/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "timeGrain": null,
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "DDoSProtectionNotifications",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DDoSMitigationFlowLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DDoSMitigationReports",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-public-ip"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.DBforPostgreSQL/servers"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "PostgreSQLLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "QueryStoreRuntimeStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "QueryStoreWaitStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-postgresql"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.PowerBIDedicated/capacities"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Engine",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-power-bi-embedded"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.RecoveryServices/vaults"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allof": [
                      {
                        "count": {
                          "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                          "where": {
                            "allof": [
                              {
                                "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                                "in": [
                                  "CoreAzureBackup",
                                  "AddonAzureBackupJobs",
                                  "AddonAzureBackupAlerts",
                                  "AddonAzureBackupPolicy",
                                  "AddonAzureBackupStorage",
                                  "AddonAzureBackupProtectedInstance"
                                ]
                              },
                              {
                                "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled",
                                "equals": "True"
                              }
                            ]
                          }
                        },
                        "Equals": 7
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logAnalyticsDestinationType",
                        "equals": "Dedicated"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.RecoveryServices/vaults/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "logAnalyticsDestinationType": "Dedicated",
                              "metrics": [],
                              "logs": [
                                {
                                  "category": "CoreAzureBackup",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AddonAzureBackupAlerts",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AddonAzureBackupJobs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AddonAzureBackupPolicy",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AddonAzureBackupProtectedInstance",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AddonAzureBackupStorage",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-recovery-vault"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Cache/redis"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Cache/redis/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-redis-cache"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Relay/namespaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Relay/namespaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "HybridConnectionsEvent",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-relay"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Search/searchServices"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Search/searchServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "OperationLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-search-services"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Service Bus namespaces to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.ServiceBus/namespaces"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.ServiceBus/namespaces/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "OperationalLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-service-bus"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.SignalRService/SignalR"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.SignalRService/SignalR/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AllLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-signalr"
        },
        {
          "properties": {
            "description": "Deploys the diagnostic settings for Azure Storage accounts to stream to a Log Analytics workspace when any Azure Storage account which is missing this diagnostic settings is created or updated.",
            "displayName": "Deploy Diagnostic Settings for Azure Storage accounts to Log Analytics workspace",
            "mode": "Indexed",
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "policyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "[[parameters('profileName')]",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "[[parameters('logsEnabled')]"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "[[parameters('metricsEnabled')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/default/microsoft.insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "Transaction",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-storage-accounts"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for SQL Databases to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/databases"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "SQLInsights",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AutomaticTuning",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "QueryStoreRuntimeStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "QueryStoreWaitStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Errors",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DatabaseWaitStatistics",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Timeouts",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Blocks",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Deadlocks",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SQLSecurityAuditEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('fullName')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-sqldbs"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/elasticPools"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('fullName')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-sql-elastic-pools"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/managedInstances"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Sql/managedInstances/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "logs": [
                                {
                                  "category": "ResourceUsageStats",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "SQLSecurityAuditEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "DevOpsOperationsAudit",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-sql-mi"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.StreamAnalytics/streamingjobs"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Execution",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Authoring",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-stream-analytics"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.TimeSeriesInsights/environments"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "Ingress",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "Management",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-time-series-insights"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/trafficManagerProfiles"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "ProbeHealthStatusEvents",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-traffic-manager"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Compute/virtualMachines/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-vm"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/virtualNetworks"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": [
                                {
                                  "category": "VMProtectionAlerts",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-virtual-network"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Virtual Machine Scale Sets to stream to a Log Analytics workspace when any Virtual Machine Scale Sets which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachineScaleSets"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "enabled": true,
                                    "days": 0
                                  }
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-vmss"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled.",
            "DisplayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/virtualNetworkGateways"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "GatewayDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "IKEDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "P2SDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "RouteDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "RouteDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "TunnelDiagnosticLog",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-vnet-gw"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Web/serverfarms"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Web/serverfarms/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": []
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-web-server-farm"
        },
        {
          "properties": {
            "Description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled",
            "DisplayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace",
            "Mode": "Indexed",
            "Parameters": {
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "metricsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable metrics",
                  "description": "Whether to enable metrics stream to the Log Analytics workspace - True or False"
                }
              },
              "logsEnabled": {
                "type": "string",
                "defaultValue": "True",
                "allowedValues": [
                  "True",
                  "False"
                ],
                "metadata": {
                  "displayName": "Enable logs",
                  "description": "Whether to enable logs stream to the Log Analytics workspace - True or False"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Web/sites"
                  },
                  {
                    "value": "[[field('kind')]",
                    "notContains": "functionapp"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Insights/diagnosticSettings",
                  "name": "setByPolicy",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/metrics.enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                        "equals": "[[parameters('logAnalytics')]"
                      }
                    ]
                  },
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "resourceName": {
                            "type": "string"
                          },
                          "logAnalytics": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "profileName": {
                            "type": "string"
                          },
                          "metricsEnabled": {
                            "type": "string"
                          },
                          "logsEnabled": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Web/sites/providers/diagnosticSettings",
                            "apiVersion": "2017-05-01-preview",
                            "name": "[[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('profileName'))]",
                            "location": "[[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                              "workspaceId": "[[parameters('logAnalytics')]",
                              "metrics": [
                                {
                                  "category": "AllMetrics",
                                  "enabled": "[[parameters('metricsEnabled')]",
                                  "retentionPolicy": {
                                    "days": 0,
                                    "enabled": true
                                  },
                                  "timeGrain": null
                                }
                              ],
                              "logs": [
                                {
                                  "category": "AppServiceAntivirusScanAuditLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceHTTPLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceConsoleLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceHTTPLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceAppLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceFileAuditLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceAuditLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServiceIPSecAuditLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                },
                                {
                                  "category": "AppServicePlatformLogs",
                                  "enabled": "[[parameters('logsEnabled')]"
                                }
                              ]
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "resourceName": {
                          "value": "[[field('name')]"
                        },
                        "profileName": {
                          "value": "[[parameters('profileName')]"
                        },
                        "metricsEnabled": {
                          "value": "[[parameters('metricsEnabled')]"
                        },
                        "logsEnabled": {
                          "value": "[[parameters('logsEnabled')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-diagnostics-website"
        },
        {
          "properties": {
            "Description": "Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine",
            "DisplayName": "Deploy Windows Domain Join Extension with keyvault configuration",
            "Mode": "Indexed",
            "Parameters": {
              "domainUsername": {
                "type": "String",
                "metadata": {
                  "displayName": "domainUsername",
                  "description": null
                }
              },
              "domainPassword": {
                "type": "String",
                "metadata": {
                  "displayName": "domainPassword",
                  "description": null
                }
              },
              "domainFQDN": {
                "type": "String",
                "metadata": {
                  "displayName": "domainFQDN",
                  "description": null
                }
              },
              "domainOUPath": {
                "type": "String",
                "metadata": {
                  "displayName": "domainOUPath",
                  "description": null
                }
              },
              "keyVaultResourceId": {
                "type": "String",
                "metadata": {
                  "displayName": "keyVaultResourceId",
                  "description": null
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Guest Configuration"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Compute/virtualMachines"
                  },
                  {
                    "field": "Microsoft.Compute/imagePublisher",
                    "equals": "MicrosoftWindowsServer"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "equals": "WindowsServer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSKU",
                    "in": [
                      "2008-R2-SP1",
                      "2008-R2-SP1-smalldisk",
                      "2008-R2-SP1-zhcn",
                      "2012-Datacenter",
                      "2012-datacenter-gensecond",
                      "2012-Datacenter-smalldisk",
                      "2012-datacenter-smalldisk-g2",
                      "2012-Datacenter-zhcn",
                      "2012-datacenter-zhcn-g2",
                      "2012-R2-Datacenter",
                      "2012-r2-datacenter-gensecond",
                      "2012-R2-Datacenter-smalldisk",
                      "2012-r2-datacenter-smalldisk-g2",
                      "2012-R2-Datacenter-zhcn",
                      "2012-r2-datacenter-zhcn-g2",
                      "2016-Datacenter",
                      "2016-datacenter-gensecond",
                      "2016-datacenter-gs",
                      "2016-Datacenter-Server-Core",
                      "2016-datacenter-server-core-g2",
                      "2016-Datacenter-Server-Core-smalldisk",
                      "2016-datacenter-server-core-smalldisk-g2",
                      "2016-Datacenter-smalldisk",
                      "2016-datacenter-smalldisk-g2",
                      "2016-Datacenter-with-Containers",
                      "2016-datacenter-with-containers-g2",
                      "2016-Datacenter-with-RDSH",
                      "2016-Datacenter-zhcn",
                      "2016-datacenter-zhcn-g2",
                      "2019-Datacenter",
                      "2019-Datacenter-Core",
                      "2019-datacenter-core-g2",
                      "2019-Datacenter-Core-smalldisk",
                      "2019-datacenter-core-smalldisk-g2",
                      "2019-Datacenter-Core-with-Containers",
                      "2019-datacenter-core-with-containers-g2",
                      "2019-Datacenter-Core-with-Containers-smalldisk",
                      "2019-datacenter-core-with-containers-smalldisk-g2",
                      "2019-datacenter-gensecond",
                      "2019-datacenter-gs",
                      "2019-Datacenter-smalldisk",
                      "2019-datacenter-smalldisk-g2",
                      "2019-Datacenter-with-Containers",
                      "2019-datacenter-with-containers-g2",
                      "2019-Datacenter-with-Containers-smalldisk",
                      "2019-datacenter-with-containers-smalldisk-g2",
                      "2019-Datacenter-zhcn",
                      "2019-datacenter-zhcn-g2",
                      "Datacenter-Core-1803-with-Containers-smalldisk",
                      "datacenter-core-1803-with-containers-smalldisk-g2",
                      "Datacenter-Core-1809-with-Containers-smalldisk",
                      "datacenter-core-1809-with-containers-smalldisk-g2",
                      "Datacenter-Core-1903-with-Containers-smalldisk",
                      "datacenter-core-1903-with-containers-smalldisk-g2",
                      "datacenter-core-1909-with-containers-smalldisk",
                      "datacenter-core-1909-with-containers-smalldisk-g1",
                      "datacenter-core-1909-with-containers-smalldisk-g2"
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Compute/virtualMachines/extensions",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Compute/virtualMachines/extensions/type",
                        "equals": "JsonADDomainExtension"
                      },
                      {
                        "field": "Microsoft.Compute/virtualMachines/extensions/publisher",
                        "equals": "Microsoft.Compute"
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "vmName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "domainUsername": {
                          "reference": {
                            "keyVault": {
                              "id": "[[parameters('keyVaultResourceId')]"
                            },
                            "secretName": "[[parameters('domainUsername')]"
                          }
                        },
                        "domainPassword": {
                          "reference": {
                            "keyVault": {
                              "id": "[[parameters('keyVaultResourceId')]"
                            },
                            "secretName": "[[parameters('domainPassword')]"
                          }
                        },
                        "domainOUPath": {
                          "value": "[[parameters('domainOUPath')]"
                        },
                        "domainFQDN": {
                          "value": "[[parameters('domainFQDN')]"
                        },
                        "keyVaultResourceId": {
                          "value": "[[parameters('keyVaultResourceId')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "vmName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "domainUsername": {
                            "type": "string"
                          },
                          "domainPassword": {
                            "type": "securestring"
                          },
                          "domainFQDN": {
                            "type": "string"
                          },
                          "domainOUPath": {
                            "type": "string"
                          },
                          "keyVaultResourceId": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "domainJoinOptions": 3,
                          "vmName": "[[parameters('vmName')]"
                        },
                        "resources": [
                          {
                            "apiVersion": "2015-06-15",
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "name": "[[concat(variables('vmName'),'/joindomain')]",
                            "location": "[[resourceGroup().location]",
                            "properties": {
                              "publisher": "Microsoft.Compute",
                              "type": "JsonADDomainExtension",
                              "typeHandlerVersion": "1.3",
                              "autoUpgradeMinorVersion": true,
                              "settings": {
                                "Name": "[[parameters('domainFQDN')]",
                                "User": "[[parameters('domainUserName')]",
                                "Restart": "true",
                                "Options": "[[variables('domainJoinOptions')]",
                                "OUPath": "[[parameters('domainOUPath')]"
                              },
                              "protectedSettings": {
                                "Password": "[[parameters('domainPassword')]"
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-windows-domain-join"
        },
        {
          "properties": {
            "Description": "This policy denies creation of Sql servers with exposed public endpoints",
            "DisplayName": "Public network access on Azure SQL Database should be disabled",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Sql/servers"
                  },
                  {
                    "field": "Microsoft.Sql/servers/publicNetworkAccess",
                    "notequals": "Disabled"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-sql"
        },
        {
          "properties": {
            "Description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints",
            "DisplayName": "Public network access on Storage accounts should be disabled",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Storage"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Storage/storageAccounts"
                  },
                  {
                    "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                    "notequals": "Deny"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-storage"
        },
        {
          "properties": {
            "Description": "This policy denies creation of Postgre SQL DB accounts with exposed public endpoints",
            "DisplayName": "Public network access should be disabled for PostgreSql",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforPostgreSQL/servers"
                  },
                  {
                    "field": "Microsoft.DBforPostgreSQL/servers/publicNetworkAccess",
                    "notequals": "Disabled"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-postgresql"
        },
        {
          "properties": {
            "Description": "This policy denies creation of MySql DB accounts with exposed public endpoints",
            "DisplayName": "Public network access should be disabled for MySQL",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforMySQL/servers"
                  },
                  {
                    "field": "Microsoft.DBforMySQL/servers/publicNetworkAccess",
                    "notequals": "Disabled"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-mysql"
        },
        {
          "properties": {
            "Description": "This policy denies the creation of Maria DB accounts with exposed public endpoints",
            "DisplayName": "Public network access should be disabled for MariaDB",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DBforMariaDB/servers"
                  },
                  {
                    "field": "Microsoft.DBforMariaDB/servers/publicNetworkAccess",
                    "notequals": "Disabled"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-mariadb"
        },
        {
          "properties": {
            "Description": "This policy denies the creation of Azure Kubernetes Service non-private clusters",
            "DisplayName": "Public network access on AKS API should be disabled",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Kubernetes"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.ContainerService/managedClusters"
                  },
                  {
                    "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
                    "notequals": "true"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-aks"
        },
        {
          "properties": {
            "Description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints",
            "DisplayName": "Public network access should be disabled for KeyVault",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Key Vault"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.KeyVault/vaults"
                  },
                  {
                    "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                    "notequals": "Deny"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-key-vault"
        },
        {
          "properties": {
            "Description": "This policy denies that Cosmos database accounts are created with out public network access is disabled.",
            "DisplayName": "Public network access should be disabled for CosmosDB",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.DocumentDB/databaseAccounts"
                  },
                  {
                    "field": "Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess",
                    "notequals": "Disabled"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-endpoint-cosmosdb"
        },
        {
          "properties": {
            "Description": "Deploy auditing settings to SQL Database when it not exist in the deployment",
            "DisplayName": "Deploy SQL Database auditing settings",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/databases"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Sql/servers/databases/auditingSettings",
                  "name": "default",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Sql/servers/databases/auditingSettings/state",
                        "equals": "enabled"
                      },
                      {
                        "field": "Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled",
                        "equals": "true"
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "location": {
                            "type": "string"
                          },
                          "sqlServerName": {
                            "type": "string"
                          },
                          "sqlServerDataBaseName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "name": "[[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                            "type": "Microsoft.Sql/servers/databases/auditingSettings",
                            "apiVersion": "2017-03-01-preview",
                            "properties": {
                              "state": "enabled",
                              "auditActionsAndGroups": [
                                "BATCH_COMPLETED_GROUP",
                                "DATABASE_OBJECT_CHANGE_GROUP",
                                "SCHEMA_OBJECT_CHANGE_GROUP",
                                "BACKUP_RESTORE_GROUP",
                                "APPLICATION_ROLE_CHANGE_PASSWORD_GROUP",
                                "DATABASE_PRINCIPAL_CHANGE_GROUP",
                                "DATABASE_PRINCIPAL_IMPERSONATION_GROUP",
                                "DATABASE_ROLE_MEMBER_CHANGE_GROUP",
                                "USER_CHANGE_PASSWORD_GROUP",
                                "DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP",
                                "DATABASE_OBJECT_PERMISSION_CHANGE_GROUP",
                                "DATABASE_PERMISSION_CHANGE_GROUP",
                                "SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP",
                                "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
                                "FAILED_DATABASE_AUTHENTICATION_GROUP"
                              ],
                              "isAzureMonitorTargetEnabled": true
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "sqlServerName": {
                          "value": "[[first(split(field('fullname'),'/'))]"
                        },
                        "sqlServerDataBaseName": {
                          "value": "[[field('name')]"
                        }
                      }
                    }
                  },
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                  ]
                }
              }
            }
          },
          "name": "deploy-sql-auditing-settings"
        },
        {
          "properties": {
            "Description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment",
            "DisplayName": "Deploy SQL Database Transparent Data Encryption ",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/databases"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Sql/transparentDataEncryption.status",
                        "equals": "Enabled"
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "location": {
                            "type": "string"
                          },
                          "sqlServerName": {
                            "type": "string"
                          },
                          "sqlServerDataBaseName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "name": "[[concat( parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/current')]",
                            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                            "apiVersion": "2014-04-01",
                            "properties": {
                              "status": "Enabled"
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "sqlServerName": {
                          "value": "[[first(split(field('fullname'),'/'))]"
                        },
                        "sqlServerDataBaseName": {
                          "value": "[[field('name')]"
                        }
                      }
                    }
                  },
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                  ]
                }
              }
            }
          },
          "name": "deploy-sql-tde"
        },
        {
          "properties": {
            "Description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration",
            "DisplayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/databases"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Sql/servers/databases/securityAlertPolicies/state",
                        "equals": "Enabled"
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "location": {
                            "type": "string"
                          },
                          "sqlServerName": {
                            "type": "string"
                          },
                          "sqlServerDataBaseName": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "name": "[[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
                            "apiVersion": "2018-06-01-preview",
                            "properties": {
                              "state": "Enabled",
                              "disabledAlerts": [
                                ""
                              ],
                              "emailAddresses": [
                                "admin@contoso.com"
                              ],
                              "emailAccountAdmins": true,
                              "storageEndpoint": null,
                              "storageAccountAccessKey": "",
                              "retentionDays": 0
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "sqlServerName": {
                          "value": "[[first(split(field('fullname'),'/'))]"
                        },
                        "sqlServerDataBaseName": {
                          "value": "[[field('name')]"
                        }
                      }
                    }
                  },
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                  ]
                }
              }
            }
          },
          "name": "deploy-sql-security-alert-policies"
        },
        {
          "properties": {
            "Description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific storage account in the parameters",
            "DisplayName": "Deploy SQL Database vulnerability Assessments",
            "Mode": "Indexed",
            "Parameters": {
              "vulnerabilityAssessmentsEmail": {
                "type": "String",
                "metadata": {
                  "description": "The email address to send alerts",
                  "displayName": "The email address to send alerts"
                }
              },
              "vulnerabilityAssessmentsStorageID": {
                "type": "String",
                "metadata": {
                  "description": "The storage account to store assessments",
                  "displayName": "The storage account to store assessments"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Sql/servers/databases"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails",
                        "equals": "[[parameters('vulnerabilityAssessmentsEmail')]"
                      },
                      {
                        "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled",
                        "equals": true
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "location": {
                            "type": "string"
                          },
                          "sqlServerName": {
                            "type": "string"
                          },
                          "sqlServerDataBaseName": {
                            "type": "string"
                          },
                          "vulnerabilityAssessmentsEmail": {
                            "type": "string"
                          },
                          "vulnerabilityAssessmentsStorageID": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "name": "[[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                            "apiVersion": "2017-03-01-preview",
                            "properties": {
                              "storageContainerPath": "[[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') ,  '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]",
                              "storageAccountAccessKey": "[[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                              "recurringScans": {
                                "isEnabled": true,
                                "emailSubscriptionAdmins": false,
                                "emails": [
                                  "[[parameters('vulnerabilityAssessmentsEmail')]"
                                ]
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      },
                      "parameters": {
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "sqlServerName": {
                          "value": "[[first(split(field('fullname'),'/'))]"
                        },
                        "sqlServerDataBaseName": {
                          "value": "[[field('name')]"
                        },
                        "vulnerabilityAssessmentsEmail": {
                          "value": "[[parameters('vulnerabilityAssessmentsEmail')]"
                        },
                        "vulnerabilityAssessmentsStorageID": {
                          "value": "[[parameters('vulnerabilityAssessmentsStorageID')]"
                        }
                      }
                    }
                  },
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                    "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"
                  ]
                }
              }
            }
          },
          "name": "deploy-sql-vulnerability-assessments"
        },
        {
          "properties": {
            "Description": "Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.",
            "DisplayName": "Deploys NSG flow logs and traffic analytics",
            "Mode": "All",
            "Parameters": {
              "retention": {
                "type": "Integer",
                "metadata": {
                  "displayName": "Retention"
                },
                "defaultValue": 5
              },
              "storageAccountResourceId": {
                "type": "String",
                "metadata": {
                  "displayName": "Storage Account Resource Id",
                  "strongType": "Microsoft.Storage/storageAccounts"
                }
              },
              "trafficAnalyticsInterval": {
                "type": "Integer",
                "metadata": {
                  "displayName": "Traffic Analytics processing interval mins (10/60)"
                }
              },
              "flowAnalyticsEnabled": {
                "type": "Boolean",
                "metadata": {
                  "displayName": "Enable Traffic Analytics"
                },
                "defaultValue": false
              },
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "strongType": "omsWorkspace",
                  "displayName": "Resource ID of Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID."
                },
                "defaultValue": ""
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/networkSecurityGroups"
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/networkWatchers/flowLogs",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "resourceGroupName": "NetworkWatcherRG",
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
                        "equals": "true"
                      },
                      {
                        "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
                        "equals": "[[parameters('flowAnalyticsEnabled')]"
                      }
                    ]
                  },
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "networkSecurityGroupName": {
                          "value": "[[field('name')]"
                        },
                        "resourceGroupName": {
                          "value": "[[resourceGroup().name]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        },
                        "storageAccountResourceId": {
                          "value": "[[parameters('storageAccountResourceId')]"
                        },
                        "retention": {
                          "value": "[[parameters('retention')]"
                        },
                        "flowAnalyticsEnabled": {
                          "value": "[[parameters('flowAnalyticsEnabled')]"
                        },
                        "trafficAnalyticsInterval": {
                          "value": "[[parameters('trafficAnalyticsInterval')]"
                        },
                        "logAnalytics": {
                          "value": "[[parameters('logAnalytics')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "networkSecurityGroupName": {
                            "type": "string"
                          },
                          "resourceGroupName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "storageAccountResourceId": {
                            "type": "string"
                          },
                          "retention": {
                            "type": "int"
                          },
                          "flowAnalyticsEnabled": {
                            "type": "bool"
                          },
                          "trafficAnalyticsInterval": {
                            "type": "int"
                          },
                          "logAnalytics": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Network/networkWatchers/flowLogs",
                            "apiVersion": "2020-05-01",
                            "name": "[[take(concat('NetworkWatcher_', toLower(parameters('location')),  '/', parameters('networkSecurityGroupName'), '-', parameters('resourceGroupName'), '-flowlog' ), 80)]",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "targetResourceId": "[[resourceId(parameters('resourceGroupName'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                              "storageId": "[[parameters('storageAccountResourceId')]",
                              "enabled": true,
                              "retentionPolicy": {
                                "enabled": true,
                                "days": "[[parameters('retention')]"
                              },
                              "format": {
                                "type": "JSON",
                                "version": 2
                              },
                              "flowAnalyticsConfiguration": {
                                "networkWatcherFlowAnalyticsConfiguration": {
                                  "enabled": "[[bool(parameters('flowAnalyticsEnabled'))]",
                                  "trafficAnalyticsInterval": "[[parameters('trafficAnalyticsInterval')]",
                                  "workspaceId": "[[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').properties.customerId, json('null')) ]",
                                  "workspaceRegion": "[[if(not(empty(parameters('logAnalytics'))), reference(parameters('logAnalytics'), '2020-03-01-preview', 'Full').location, json('null')) ]",
                                  "workspaceResourceId": "[[if(not(empty(parameters('logAnalytics'))), parameters('logAnalytics'), json('null'))]"
                                }
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-nsg-flow-logs"
        },
        {
          "properties": {
            "Description": "This policy denies the creation of a subsnet with out an Network Security Group. NSG help to protect traffic across subnet-level.",
            "DisplayName": "Deny Subnets without Network Security Group",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/virtualNetworks/subnets"
                  },
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                    "exists": "false"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-subnet-without-nsg"
        },
        {
          "properties": {
            "Description": "Deploy Azure DDoS Protection Standard.",
            "DisplayName": "Deploy Azure DDoS Protection Standard",
            "Mode": "Indexed",
            "Parameters": {
              "ddosName": {
                "type": "String",
                "metadata": {
                  "displayName": "ddosName",
                  "description": "Name of the Virtual WAN"
                }
              },
              "ddosRegion": {
                "type": "String",
                "metadata": {
                  "displayName": "ddosRegion",
                  "description": "Select Azure region for Virtual WAN",
                  "strongType": "location"
                }
              },
              "rgName": {
                "type": "String",
                "metadata": {
                  "displayName": "rgName",
                  "description": "Provide name for resource group."
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/ddosProtectionPlans",
                  "deploymentScope": "Subscription",
                  "existenceScope": "ResourceGroup",
                  "resourceGroupName": "[[parameters('rgName')]",
                  "name": "[[parameters('ddosName')]",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "rgName": {
                          "value": "[[parameters('rgName')]"
                        },
                        "ddosname": {
                          "value": "[[parameters('ddosname')]"
                        },
                        "ddosregion": {
                          "value": "[[parameters('ddosRegion')]"
                        }
                      },
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "rgName": {
                            "type": "string"
                          },
                          "ddosname": {
                            "type": "string"
                          },
                          "ddosRegion": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2018-05-01",
                            "name": "[[parameters('rgName')]",
                            "location": "[[deployment().location]",
                            "properties": {}
                          },
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2018-05-01",
                            "name": "ddosprotection",
                            "resourceGroup": "[[parameters('rgName')]",
                            "dependsOn": [
                              "[[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                            ],
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                "contentVersion": "1.0.0.0",
                                "parameters": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Network/ddosProtectionPlans",
                                    "apiVersion": "2019-12-01",
                                    "name": "[[parameters('ddosName')]",
                                    "location": "[[parameters('ddosRegion')]",
                                    "properties": {}
                                  }
                                ],
                                "outputs": {}
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-ddos-protection"
        },
        {
          "properties": {
            "Description": "This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription",
            "DisplayName": "Deny Azure Private DNS Zones",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/privateDnsZones"
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-private-dns-zones"
        },
        {
          "properties": {
            "Description": "This policy denies creation of Public IPs under the assigned scope.",
            "DisplayName": "Deny Public IP",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "field": "type",
                "equals": "Microsoft.Network/publicIPAddresses"
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-public-ip"
        },
        {
          "properties": {
            "Description": "Deploys Log Analytics and Automation account to the subscription where the policy is assigned.",
            "DisplayName": "Deploy the Log Analytics in the subscription",
            "Mode": "Indexed",
            "Parameters": {
              "workspaceName": {
                "type": "String",
                "metadata": {
                  "displayName": "workspaceName",
                  "description": "Provide name for log analytics workspace"
                }
              },
              "automationAccountName": {
                "type": "String",
                "metadata": {
                  "displayName": "automationAccountName",
                  "description": "Provide name for automation account"
                }
              },
              "workspaceRegion": {
                "type": "String",
                "metadata": {
                  "displayName": "workspaceRegion",
                  "description": "Select Azure region for Log Analytics"
                }
              },
              "automationRegion": {
                "type": "String",
                "metadata": {
                  "displayName": "automationRegion",
                  "description": "Select Azure region for Automation account"
                }
              },
              "retentionInDays": {
                "type": "string",
                "defaultValue": "30",
                "metadata": {
                  "displayName": "Data retention",
                  "description": "Select data retention (days) for Log Analytics."
                }
              },
              "rgName": {
                "type": "String",
                "metadata": {
                  "displayName": "rgName",
                  "description": "Provide name for resource group."
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.OperationalInsights/workspaces",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                    "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "name",
                        "like": "[[parameters('workspaceName')]"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "rgName": {
                          "value": "[[parameters('rgName')]"
                        },
                        "retentionInDays": {
                          "value": "[[parameters('retentionInDays')]"
                        },
                        "workspaceName": {
                          "value": "[[parameters('workspaceName')]"
                        },
                        "workspaceRegion": {
                          "value": "[[parameters('workspaceRegion')]"
                        },
                        "automationAccountName": {
                          "value": "[[parameters('automationAccountName')]"
                        },
                        "automationRegion": {
                          "value": "[[parameters('automationRegion')]"
                        }
                      },
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "rgName": {
                            "type": "string"
                          },
                          "workspaceName": {
                            "type": "string"
                          },
                          "workspaceRegion": {
                            "type": "string"
                          },
                          "automationAccountName": {
                            "type": "string"
                          },
                          "automationRegion": {
                            "type": "string"
                          },
                          "retentionInDays": {
                            "type": "string"
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2018-05-01",
                            "name": "[[parameters('rgName')]",
                            "location": "[[deployment().location]",
                            "properties": {}
                          },
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2018-05-01",
                            "name": "log-analytics",
                            "resourceGroup": "[[parameters('rgName')]",
                            "dependsOn": [
                              "[[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                            ],
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                "contentVersion": "1.0.0.0",
                                "parameters": {},
                                "variables": {},
                                "resources": [
                                  {
                                    "apiversion": "2015-10-31",
                                    "location": "[[parameters('AutomationRegion')]",
                                    "name": "[[parameters('AutomationAccountName')]",
                                    "type": "Microsoft.Automation/automationAccounts",
                                    "comments": "Automation account for ",
                                    "properties": {
                                      "sku": {
                                        "name": "OMS"
                                      }
                                    }
                                  },
                                  {
                                    "apiVersion": "2017-03-15-preview",
                                    "location": "[[parameters('workspaceRegion')]",
                                    "name": "[[parameters('workspaceName')]",
                                    "type": "Microsoft.OperationalInsights/workspaces",
                                    "properties": {
                                      "sku": {
                                        "name": "pernode"
                                      },
                                      "enableLogAccessUsingOnlyResourcePermissions": true,
                                      "retentionInDays": "[[int(parameters('retentionInDays'))]"
                                    },
                                    "resources": [
                                      {
                                        "name": "Automation",
                                        "type": "linkedServices",
                                        "apiVersion": "2015-11-01-preview",
                                        "dependsOn": [
                                          "[[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]",
                                          "[[resourceId('Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                        ],
                                        "properties": {
                                          "resourceId": "[[concat(subscription().id, '/resourceGroups/', parameters('rgName'), '/providers/Microsoft.Automation/automationAccounts/', parameters('AutomationAccountName'))]"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "outputs": {}
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-log-analytics"
        },
        {
          "properties": {
            "Description": "Deploys Azure Firewall Manager policy in subscription where the policy is assigned.",
            "DisplayName": "Deploy Azure Firewall Manager policy in the subscription",
            "Mode": "Indexed",
            "Parameters": {
              "fwpolicy": {
                "type": "Object",
                "metadata": {
                  "displayName": "fwpolicy",
                  "description": "Object describing Azure Firewall Policy"
                },
                "defaultValue": {}
              },
              "fwPolicyRegion": {
                "type": "String",
                "metadata": {
                  "displayName": "fwPolicyRegion",
                  "description": "Select Azure region for Azure Firewall Policy",
                  "strongType": "location"
                }
              },
              "rgName": {
                "type": "String",
                "metadata": {
                  "displayName": "rgName",
                  "description": "Provide name for resource group."
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/firewallPolicies",
                  "deploymentScope": "Subscription",
                  "existenceScope": "ResourceGroup",
                  "resourceGroupName": "[[parameters('rgName')]",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "rgName": {
                          "value": "[[parameters('rgName')]"
                        },
                        "fwPolicy": {
                          "value": "[[parameters('fwPolicy')]"
                        },
                        "fwPolicyRegion": {
                          "value": "[[parameters('fwPolicyRegion')]"
                        }
                      },
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "rgName": {
                            "type": "string"
                          },
                          "fwPolicy": {
                            "type": "object"
                          },
                          "fwPolicyRegion": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2018-05-01",
                            "name": "[[parameters('rgName')]",
                            "location": "[[deployment().location]",
                            "properties": {}
                          },
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2018-05-01",
                            "name": "fwpolicies",
                            "resourceGroup": "[[parameters('rgName')]",
                            "dependsOn": [
                              "[[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                            ],
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                "contentVersion": "1.0.0.0",
                                "parameters": {},
                                "variables": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Network/firewallPolicies",
                                    "apiVersion": "2019-09-01",
                                    "name": "[[parameters('fwpolicy').firewallPolicyName]",
                                    "location": "[[parameters('fwpolicy').location]",
                                    "dependsOn": [],
                                    "tags": {},
                                    "properties": {},
                                    "resources": [
                                      {
                                        "type": "ruleGroups",
                                        "apiVersion": "2019-09-01",
                                        "name": "[[parameters('fwpolicy').ruleGroups.name]",
                                        "dependsOn": [
                                          "[[resourceId('Microsoft.Network/firewallPolicies',parameters('fwpolicy').firewallPolicyName)]"
                                        ],
                                        "properties": {
                                          "priority": "[[parameters('fwpolicy').ruleGroups.properties.priority]",
                                          "rules": "[[parameters('fwpolicy').ruleGroups.properties.rules]"
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "outputs": {}
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-firewall-policy"
        },
        {
          "properties": {
            "displayName": "Deny SSH From the Internet",
            "description": "This policy denies any network security rule that allows SSH access from Internet",
            "mode": "All",
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny"
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                  },
                  {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                        "equals": "Allow"
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                        "equals": "Inbound"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                            "equals": "*"
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                            "equals": "22"
                          },
                          {
                            "value": "[[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),22),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),22)), 'false')]",
                            "equals": "true"
                          },
                          {
                            "count": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "where": {
                                "value": "[[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),22),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),22)) , 'false')]",
                                "equals": "true"
                              }
                            },
                            "greater": 0
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "notEquals": "*"
                            }
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "notEquals": "22"
                            }
                          }
                        ]
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                            "equals": "*"
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                            "equals": "Internet"
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "notEquals": "*"
                            }
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "notEquals": "Internet"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-ssh-from-internet"
        },
        {
          "properties": {
            "displayName": "Deny RDP From the Internet",
            "description": "This policy denies any network security rule that allows RDP access from Internet",
            "mode": "All",
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "parameters": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                },
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny"
              }
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                  },
                  {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                        "equals": "Allow"
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                        "equals": "Inbound"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                            "equals": "*"
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                            "equals": "3389"
                          },
                          {
                            "value": "[[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))), contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'),'-')), and(lessOrEquals(int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389),greaterOrEquals(int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))),3389)), 'false')]",
                            "equals": "true"
                          },
                          {
                            "count": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "where": {
                                "value": "[[if(and(not(empty(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')))), contains(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')),'-')), and(lessOrEquals(int(first(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389),greaterOrEquals(int(last(split(first(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '-'))),3389)) , 'false')]",
                                "equals": "true"
                              }
                            },
                            "greater": 0
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "notEquals": "*"
                            }
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                              "notEquals": "3389"
                            }
                          }
                        ]
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                            "equals": "*"
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                            "equals": "Internet"
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "notEquals": "*"
                            }
                          },
                          {
                            "not": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "notEquals": "Internet"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-rdp-from-internet"
        },
        {
          "Properties": {
            "DisplayName": "Append Azure Hybrid Use Benefits to VMs",
            "Description": "Append Azure Hybrid Use Benefits licensing to all Windows VMs",
            "Mode": "All",
            "metadata": {
              "version": "1.0.0",
              "category": "Cost Management"
            },
            "Parameters": {},
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "in": [
                      "Microsoft.Compute/virtualMachines",
                      "Microsoft.Compute/VirtualMachineScaleSets"
                    ]
                  },
                  {
                    "field": "Microsoft.Compute/imagePublisher",
                    "equals": "MicrosoftWindowsServer"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "equals": "WindowsServer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSKU",
                    "in": [
                      "2008-R2-SP1",
                      "2008-R2-SP1-smalldisk",
                      "2012-Datacenter",
                      "2012-Datacenter-smalldisk",
                      "2012-R2-Datacenter",
                      "2012-R2-Datacenter-smalldisk",
                      "2016-Datacenter",
                      "2016-Datacenter-Server-Core",
                      "2016-Datacenter-Server-Core-smalldisk",
                      "2016-Datacenter-smalldisk",
                      "2016-Datacenter-with-Containers",
                      "2016-Datacenter-with-RDSH",
                      "2019-Datacenter"
                    ]
                  },
                  {
                    "field": "Microsoft.Compute/licenseType",
                    "notEquals": "Windows_Server"
                  }
                ]
              },
              "then": {
                "effect": "append",
                "details": [
                  {
                    "field": "Microsoft.Compute/licenseType",
                    "value": "Windows_Server"
                  }
                ]
              }
            }
          },
          "name": "append-az-hub"
        },
        {
          "properties": {
            "Description": "This policy enables you to restrict that Application Gateways is always deployed with WAF enabled",
            "DisplayName": "Application Gateway should be deployed with WAF enabled",
            "Mode": "Indexed",
            "Parameters": {
              "effect": {
                "type": "String",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "defaultValue": "Deny",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/applicationGateways"
                  },
                  {
                    "field": "Microsoft.Network/applicationGateways/sku.name",
                    "notequals": "WAF_v2"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]"
              }
            }
          },
          "name": "deny-appgwy-without-waf"
        },
        {
          "properties": {
            "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
            "DisplayName": "Deploy DNS Zone Group for Storage-Blob Private Endpoint",
            "Mode": "Indexed",
            "Parameters": {
              "privateDnsZoneId": {
                "type": "String",
                "metadata": {
                  "displayName": "privateDnsZoneId",
                  "strongType": "Microsoft.Network/privateDnsZones"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/privateEndpoints"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                      "where": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "equals": "blob"
                      }
                    },
                    "greaterOrEquals": 1
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneId": {
                            "type": "string"
                          },
                          "privateEndpointName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "name": "[[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "privateDnsZoneConfigs": [
                                {
                                  "name": "storageBlob-privateDnsZone",
                                  "properties": {
                                    "privateDnsZoneId": "[[parameters('privateDnsZoneId')]"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "parameters": {
                        "privateDnsZoneId": {
                          "value": "[[parameters('privateDnsZoneId')]"
                        },
                        "privateEndpointName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-dns-zone-group-for-blob-private-endpoint"
        },
        {
          "properties": {
            "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-File Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
            "DisplayName": "Deploy DNS Zone Group for Storage-File Private Endpoint",
            "Mode": "Indexed",
            "Parameters": {
              "privateDnsZoneId": {
                "type": "String",
                "metadata": {
                  "displayName": "privateDnsZoneId",
                  "strongType": "Microsoft.Network/privateDnsZones"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/privateEndpoints"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                      "where": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "equals": "file"
                      }
                    },
                    "greaterOrEquals": 1
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneId": {
                            "type": "string"
                          },
                          "privateEndpointName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "name": "[[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "privateDnsZoneConfigs": [
                                {
                                  "name": "storageFile-privateDnsZone",
                                  "properties": {
                                    "privateDnsZoneId": "[[parameters('privateDnsZoneId')]"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "parameters": {
                        "privateDnsZoneId": {
                          "value": "[[parameters('privateDnsZoneId')]"
                        },
                        "privateEndpointName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-dns-zone-group-for-file-private-endpoint"
        },
        {
          "properties": {
            "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Key Vault Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
            "DisplayName": "Deploy DNS Zone Group for Key Vault Private Endpoint",
            "Mode": "Indexed",
            "Parameters": {
              "privateDnsZoneId": {
                "type": "String",
                "metadata": {
                  "displayName": "privateDnsZoneId",
                  "strongType": "Microsoft.Network/privateDnsZones"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/privateEndpoints"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                      "where": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "equals": "vault"
                      }
                    },
                    "greaterOrEquals": 1
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneId": {
                            "type": "string"
                          },
                          "privateEndpointName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "name": "[[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "privateDnsZoneConfigs": [
                                {
                                  "name": "keyVault-privateDnsZone",
                                  "properties": {
                                    "privateDnsZoneId": "[[parameters('privateDnsZoneId')]"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "parameters": {
                        "privateDnsZoneId": {
                          "value": "[[parameters('privateDnsZoneId')]"
                        },
                        "privateEndpointName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-dns-zone-group-for-key-vault-private-endpoint"
        },
        {
          "properties": {
            "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Queue Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
            "DisplayName": "Deploy DNS Zone Group for Storage-Queue Private Endpoint",
            "Mode": "Indexed",
            "Parameters": {
              "privateDnsZoneId": {
                "type": "String",
                "metadata": {
                  "displayName": "privateDnsZoneId",
                  "strongType": "Microsoft.Network/privateDnsZones"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/privateEndpoints"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                      "where": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "equals": "queue"
                      }
                    },
                    "greaterOrEquals": 1
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneId": {
                            "type": "string"
                          },
                          "privateEndpointName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "name": "[[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "privateDnsZoneConfigs": [
                                {
                                  "name": "storageQueue-privateDnsZone",
                                  "properties": {
                                    "privateDnsZoneId": "[[parameters('privateDnsZoneId')]"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "parameters": {
                        "privateDnsZoneId": {
                          "value": "[[parameters('privateDnsZoneId')]"
                        },
                        "privateEndpointName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-dns-zone-group-for-queue-private-endpoint"
        },
        {
          "properties": {
            "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for SQL Private Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
            "DisplayName": "Deploy DNS Zone Group for SQL Private Endpoint",
            "Mode": "Indexed",
            "Parameters": {
              "privateDnsZoneId": {
                "type": "String",
                "metadata": {
                  "displayName": "privateDnsZoneId",
                  "strongType": "Microsoft.Network/privateDnsZones"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/privateEndpoints"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                      "where": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "equals": "sqlServer"
                      }
                    },
                    "greaterOrEquals": 1
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneId": {
                            "type": "string"
                          },
                          "privateEndpointName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "name": "[[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "privateDnsZoneConfigs": [
                                {
                                  "name": "sqlServer-privateDnsZone",
                                  "properties": {
                                    "privateDnsZoneId": "[[parameters('privateDnsZoneId')]"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "parameters": {
                        "privateDnsZoneId": {
                          "value": "[[parameters('privateDnsZoneId')]"
                        },
                        "privateEndpointName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-dns-zone-group-for-sql-private-endpoint"
        },
        {
          "properties": {
            "Description": "Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Table Private Endpoint. Used enforce the configuration to a single Private DNS Zone. ",
            "DisplayName": "Deploy DNS Zone Group for Storage-Table Private Endpoint",
            "Mode": "Indexed",
            "Parameters": {
              "privateDnsZoneId": {
                "type": "String",
                "metadata": {
                  "displayName": "privateDnsZoneId",
                  "strongType": "Microsoft.Network/privateDnsZones"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Network/privateEndpoints"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                      "where": {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                        "equals": "table"
                      }
                    },
                    "greaterOrEquals": 1
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "properties": {
                      "mode": "incremental",
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "privateDnsZoneId": {
                            "type": "string"
                          },
                          "privateEndpointName": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "name": "[[concat(parameters('privateEndpointName'), '/deployedByPolicy')]",
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-03-01",
                            "location": "[[parameters('location')]",
                            "properties": {
                              "privateDnsZoneConfigs": [
                                {
                                  "name": "storageTable-privateDnsZone",
                                  "properties": {
                                    "privateDnsZoneId": "[[parameters('privateDnsZoneId')]"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "parameters": {
                        "privateDnsZoneId": {
                          "value": "[[parameters('privateDnsZoneId')]"
                        },
                        "privateEndpointName": {
                          "value": "[[field('name')]"
                        },
                        "location": {
                          "value": "[[field('location')]"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-dns-zone-group-for-table-private-endpoint"
        },
        {
          "properties": {
            "Description": "Deploy the Virtual WAN in the specific region.",
            "DisplayName": "Deploy the Virtual WAN in the specific region",
            "Mode": "Indexed",
            "Parameters": {
              "vwanname": {
                "type": "String",
                "metadata": {
                  "displayName": "vwanname",
                  "description": "Name of the Virtual WAN"
                }
              },
              "vwanRegion": {
                "type": "String",
                "metadata": {
                  "displayName": "vwanRegion",
                  "description": "Select Azure region for Virtual WAN",
                  "strongType": "location"
                }
              },
              "rgName": {
                "type": "String",
                "metadata": {
                  "displayName": "rgName",
                  "description": "Provide name for resource group."
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Network/virtualWans",
                  "deploymentScope": "Subscription",
                  "existenceScope": "ResourceGroup",
                  "name": "[[parameters('vwanname')]",
                  "resourceGroupName": "[[parameters('rgName')]",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"
                  ],
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "rgName": {
                          "value": "[[parameters('rgName')]"
                        },
                        "vwanname": {
                          "value": "[[parameters('vwanname')]"
                        },
                        "vwanRegion": {
                          "value": "[[parameters('vwanRegion')]"
                        }
                      },
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "rgName": {
                            "type": "string"
                          },
                          "vwanname": {
                            "type": "string"
                          },
                          "vwanRegion": {
                            "type": "string"
                          }
                        },
                        "variables": {
                          "vwansku": "Standard"
                        },
                        "resources": [
                          {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2018-05-01",
                            "name": "[[parameters('rgName')]",
                            "location": "[[deployment().location]",
                            "properties": {}
                          },
                          {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2018-05-01",
                            "name": "vwan",
                            "resourceGroup": "[[parameters('rgName')]",
                            "dependsOn": [
                              "[[resourceId('Microsoft.Resources/resourceGroups/', parameters('rgName'))]"
                            ],
                            "properties": {
                              "mode": "Incremental",
                              "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                                "contentVersion": "1.0.0.0",
                                "parameters": {},
                                "resources": [
                                  {
                                    "type": "Microsoft.Network/virtualWans",
                                    "apiVersion": "2020-05-01",
                                    "location": "[[parameters('vwanRegion')]",
                                    "name": "[[parameters('vwanname')]",
                                    "properties": {
                                      "virtualHubs": [],
                                      "vpnSites": [],
                                      "type": "[[variables('vwansku')]"
                                    }
                                  }
                                ],
                                "outputs": {}
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-vwan"
        },
        {
          "properties": {
            "description": "Deploy Azure Security Center Security Contacts",
            "displayName": "Deploy Azure Security Center Security Contacts",
            "mode": "All",
            "parameters": {
              "emailSecurityContact": {
                "type": "string",
                "metadata": {
                  "displayName": "Security contacts email address",
                  "description": "Provide email address for Azure Security Center contact details"
                }
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/securityContacts",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/securityContacts/email",
                        "contains": "[[parameters('emailSecurityContact')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/securityContacts"
                      },
                      {
                        "field": "Microsoft.Security/securityContacts/alertNotifications",
                        "equals": "On"
                      },
                      {
                        "field": "Microsoft.Security/securityContacts/alertsToAdmins",
                        "equals": "On"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "emailSecurityContact": {
                          "value": "[[parameters('emailSecurityContact')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "emailSecurityContact": {
                            "type": "string",
                            "metadata": {
                              "description": "Security contacts email address"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/securityContacts",
                            "name": "default",
                            "apiVersion": "2020-01-01-preview",
                            "properties": {
                              "emails": "[[parameters('emailSecurityContact')]",
                              "notificationsByRole": {
                                "state": "On",
                                "roles": [
                                  "Owner"
                                ]
                              },
                              "alertNotifications": {
                                "state": "On",
                                "minimalSeverity": "High"
                              }
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-security-contacts"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings in Azure Security Center for Virtual Machines",
            "displayName": "Deploy Azure Defender for Virtual Machines",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "VirtualMachines",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "VirtualMachines",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-vms"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings in Azure Security Center for Azure Sql Databases",
            "displayName": "Deploy Azure Defender for Azure Sql Databases",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "SqlServers",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "SqlServers",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-sql"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings in Azure Security Center for Azure App Services",
            "displayName": "Deploy Azure Defender for Azure App Services",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "AppServices",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "AppServices",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-appservice"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings in Azure Security Center for Storage Accounts",
            "displayName": "Deploy Azure Defender for Storage Accounts",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "StorageAccounts",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "StorageAccounts",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-sa"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings in Sql Server on Virtual Machines",
            "displayName": "Deploy Azure Defender for Sql on Virtual Machines",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "SqlServerVirtualMachines",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "SqlServerVirtualMachines",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-sqlvm"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings for AKS",
            "displayName": "Deploy Azure Defender for AKS",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "KubernetesService",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "KubernetesService",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-aks"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings for Azure Container Registry",
            "displayName": "Deploy Azure Defender for ACR",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "ContainerRegistry",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "ContainerRegistry",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-acr"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings for Azure Key Vault",
            "displayName": "Deploy Azure Defender for AKV",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "KeyVaults",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "KeyVaults",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-akv"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings for DNS",
            "displayName": "Deploy Azure Defender for DNS",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "Dns",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "Dns",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-dns"
        },
        {
          "properties": {
            "description": "Deploy the Azure Defender settings for Azure Resource Manager",
            "displayName": "Deploy Azure Defender for ARM",
            "mode": "All",
            "parameters": {
              "pricingTier": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier",
                  "description": "Azure Defender pricing tier"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "effect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Effect",
                  "description": "Enable or disable the execution of the policy"
                }
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "policyRule": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.Resources/subscriptions"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "type": "Microsoft.Security/pricings",
                  "name": "Arm",
                  "deploymentScope": "Subscription",
                  "existenceScope": "Subscription",
                  "roleDefinitionIds": [
                    "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
                  ],
                  "existenceCondition": {
                    "allOf": [
                      {
                        "field": "Microsoft.Security/pricings/pricingTier",
                        "equals": "[[parameters('pricingTier')]"
                      },
                      {
                        "field": "type",
                        "equals": "Microsoft.Security/pricings"
                      }
                    ]
                  },
                  "deployment": {
                    "location": "northeurope",
                    "properties": {
                      "mode": "incremental",
                      "parameters": {
                        "pricingTier": {
                          "value": "[[parameters('pricingTier')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "pricingTier": {
                            "type": "string",
                            "metadata": {
                              "description": "Azure Defender pricing tier"
                            }
                          }
                        },
                        "variables": {},
                        "resources": [
                          {
                            "type": "Microsoft.Security/pricings",
                            "apiVersion": "2018-06-01",
                            "name": "Arm",
                            "properties": {
                              "pricingTier": "[[parameters('pricingTier')]"
                            }
                          }
                        ],
                        "outputs": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "name": "deploy-asc-defender-arm"
        }
      ]
    },
    "initiatives": {
      "policySetDefinitions": [
        {
          "properties": {
            "description": "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit. ",
            "displayName": "Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit",
            "parameters": {
              "AppServiceHttpEffect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below",
                  "description": "Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny."
                }
              },
              "AppServiceTlsVersionEffect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "App Service. Appends the AppService WebApp, APIApp, Function App to enable https only",
                  "description": "App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny."
                }
              },
              "AppServiceminTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.0",
                  "1.1"
                ],
                "metadata": {
                  "displayName": "App Service. Select version minimum TLS Web App config",
                  "description": "App Service. Select version  minimum TLS version for a  Web App config to enforce"
                }
              },
              "APIAppServiceLatestTlsEffect": {
                "metadata": {
                  "displayName": "App Service API App. Latest TLS version should be used in your API App",
                  "description": "App Service API App. Only Audit, deny not possible as it is a related resource.  Upgrade to the latest TLS version."
                },
                "type": "String",
                "defaultValue": "AuditIfNotExists",
                "allowedValues": [
                  "AuditIfNotExists",
                  "Disabled"
                ]
              },
              "APIAppServiceHttpsEffect": {
                "metadata": {
                  "displayName": "App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                  "description": "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "FunctionLatestTlsEffect": {
                "metadata": {
                  "displayName": "App Service Function App. Latest TLS version should be used in your Function App",
                  "description": "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                },
                "type": "String",
                "defaultValue": "AuditIfNotExists",
                "allowedValues": [
                  "AuditIfNotExists",
                  "Disabled"
                ]
              },
              "FunctionServiceHttpsEffect": {
                "metadata": {
                  "displayName": "App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                  "description": "App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "WebAppServiceLatestTlsEffect": {
                "metadata": {
                  "displayName": "App Service Web App. Latest TLS version should be used in your Web App",
                  "description": "Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version."
                },
                "type": "String",
                "defaultValue": "AuditIfNotExists",
                "allowedValues": [
                  "AuditIfNotExists",
                  "Disabled"
                ]
              },
              "WebAppServiceHttpsEffect": {
                "metadata": {
                  "displayName": "App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy.",
                  "description": "Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "AKSIngressHttpsOnlyEffect": {
                "metadata": {
                  "displayName": "AKS Service. Enforce HTTPS ingress in Kubernetes cluster",
                  "description": "This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc."
                },
                "type": "String",
                "defaultValue": "deny",
                "allowedValues": [
                  "audit",
                  "deny",
                  "disabled"
                ]
              },
              "MySQLEnableSSLDeployEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server",
                  "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                }
              },
              "MySQLEnableSSLEffect": {
                "metadata": {
                  "displayName": "MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers",
                  "description": "Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "MySQLminimalTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_0",
                  "TLS1_1",
                  "TLSEnforcementDisabled"
                ],
                "metadata": {
                  "displayName": "MySQL database servers. Select version minimum TLS for MySQL server",
                  "description": "Select version  minimum TLS version Azure Database for MySQL server to enforce"
                }
              },
              "PostgreSQLEnableSSLDeployEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server",
                  "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                }
              },
              "PostgreSQLEnableSSLEffect": {
                "metadata": {
                  "displayName": "PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers",
                  "description": "Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "PostgreSQLminimalTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_0",
                  "TLS1_1",
                  "TLSEnforcementDisabled"
                ],
                "metadata": {
                  "displayName": "PostgreSQL database servers. Select version minimum TLS for MySQL server",
                  "description": "PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce"
                }
              },
              "RedisTLSDeployEffect": {
                "type": "String",
                "defaultValue": "Append",
                "allowedValues": [
                  "Append",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis",
                  "description": "Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                }
              },
              "RedisMinTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.0",
                  "1.1"
                ],
                "metadata": {
                  "displayName": "Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis",
                  "description": "Select version  minimum TLS version for a Azure Cache for Redis to enforce"
                }
              },
              "RedisTLSEffect": {
                "metadata": {
                  "displayName": "Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled",
                  "description": "Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ]
              },
              "SQLManagedInstanceTLSDeployEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers",
                  "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                }
              },
              "SQLManagedInstanceMinTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.0",
                  "1.1"
                ],
                "metadata": {
                  "displayName": "Azure Managed Instance.Select version minimum TLS for Azure Managed Instance",
                  "description": "Select version  minimum TLS version for Azure Managed Instanceto to  enforce"
                }
              },
              "SQLManagedInstanceTLSEffect": {
                "metadata": {
                  "displayName": "SQL Managed Instance should have the minimal TLS version of 1.2",
                  "description": "Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "SQLServerTLSDeployEffect": {
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers",
                  "description": "Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server."
                }
              },
              "SQLServerminTlsVersion": {
                "type": "String",
                "defaultValue": "1.2",
                "allowedValues": [
                  "1.2",
                  "1.0",
                  "1.1"
                ],
                "metadata": {
                  "displayName": "Azure SQL Database.Select version minimum TLS for Azure SQL Database",
                  "description": "Select version  minimum TLS version for Azure SQL Database to enforce"
                }
              },
              "SQLServerTLSEffect": {
                "metadata": {
                  "displayName": "Azure SQL Database should have the minimal TLS version of 1.2",
                  "description": "Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities."
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Disabled",
                  "Deny"
                ]
              },
              "StorageDeployHttpsEnabledEffect": {
                "metadata": {
                  "displayName": "Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled",
                  "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                },
                "type": "String",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ]
              },
              "StorageminimumTlsVersion": {
                "type": "String",
                "defaultValue": "TLS1_2",
                "allowedValues": [
                  "TLS1_2",
                  "TLS1_1",
                  "TLS1_0"
                ],
                "metadata": {
                  "displayName": "Storage Account select minimum TLS version",
                  "description": "Select version  minimum TLS version on Azure Storage Account to enforce"
                }
              },
              "StorageHttpsEnabledEffect": {
                "metadata": {
                  "displayName": "Azure Storage Account. Secure transfer to storage accounts should be enabled",
                  "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking"
                },
                "type": "String",
                "defaultValue": "Audit",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ]
              }
            },
            "policyDefinitionGroups": null,
            "metadata": {
              "version": "1.0.0",
              "category": "Encryption"
            },
            "PolicyDefinitions": [
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/append-app-service-httpsonly')]",
                "policyDefinitionReferenceId": "AppServiceHttpEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('AppServiceHttpEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/append-app-service-latest-tls')]",
                "policyDefinitionReferenceId": "AppServiceminTlsVersion",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('AppServiceTlsVersionEffect')]"
                  },
                  "minTlsVersion": {
                    "value": "[[parameters('AppServiceminTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e",
                "policyDefinitionReferenceId": "APIAppServiceLatestTlsEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('APIAppServiceLatestTlsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193",
                "policyDefinitionReferenceId": "FunctionLatestTlsEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('FunctionLatestTlsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b",
                "policyDefinitionReferenceId": "WebAppServiceLatestTlsEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('WebAppServiceLatestTlsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-app-service-apiapp-http')]",
                "policyDefinitionReferenceId": "APIAppServiceHttpsEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('APIAppServiceHttpsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-app-service-function-app-http')]",
                "policyDefinitionReferenceId": "FunctionServiceHttpsEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('FunctionServiceHttpsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-app-service-web-app-http')]",
                "policyDefinitionReferenceId": "WebAppServiceHttpsEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('WebAppServiceHttpsEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
                "policyDefinitionReferenceId": "AKSIngressHttpsOnlyEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('AKSIngressHttpsOnlyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-mysql-ssl-enforcement')]",
                "policyDefinitionReferenceId": "MySQLEnableSSLDeployEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('MySQLEnableSSLDeployEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('MySQLminimalTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-mysql-http')]",
                "policyDefinitionReferenceId": "MySQLEnableSSLEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('MySQLEnableSSLEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('MySQLminimalTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-postgresql-ssl-enforcement')]",
                "policyDefinitionReferenceId": "PostgreSQLEnableSSLDeployEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('PostgreSQLEnableSSLDeployEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('PostgreSQLminimalTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-postgresql-http')]",
                "policyDefinitionReferenceId": "PostgreSQLEnableSSLEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('PostgreSQLEnableSSLEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('PostgreSQLminimalTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/append-redis-ssl-enforcement')]",
                "policyDefinitionReferenceId": "RedisTLSDeployEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('RedisTLSDeployEffect')]"
                  },
                  "minimumTlsVersion": {
                    "value": "[[parameters('RedisMinTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/append-redis-disable-non-ssl-port')]",
                "policyDefinitionReferenceId": "RedisdisableNonSslPort",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('RedisTLSDeployEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-redis-http')]",
                "policyDefinitionReferenceId": "RedisDenyhttps",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('RedisTLSEffect')]"
                  },
                  "minimumTlsVersion": {
                    "value": "[[parameters('RedisMinTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-sqlmi-min-tls')]",
                "policyDefinitionReferenceId": "SQLManagedInstanceTLSDeployEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SQLManagedInstanceTLSDeployEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('SQLManagedInstanceMinTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-sqlmi-min-tls')]",
                "policyDefinitionReferenceId": "SQLManagedInstanceTLSEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SQLManagedInstanceTLSEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('SQLManagedInstanceMinTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-sql-min-tls')]",
                "policyDefinitionReferenceId": "SQLServerTLSDeployEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SQLServerTLSDeployEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('SQLServerminTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-sql-min-tls')]",
                "policyDefinitionReferenceId": "SQLServerTLSEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SQLServerTLSEffect')]"
                  },
                  "minimalTlsVersion": {
                    "value": "[[parameters('SQLServerminTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-storage-min-tls')]",
                "policyDefinitionReferenceId": "StorageHttpsEnabledEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('StorageHttpsEnabledEffect')]"
                  },
                  "minimumTlsVersion": {
                    "value": "[[parameters('StorageMinimumTlsVersion')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-storage-ssl-enforcement')]",
                "policyDefinitionReferenceId": "StorageDeployHttpsEnabledEffect",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('StorageDeployHttpsEnabledEffect')]"
                  },
                  "minimumTlsVersion": {
                    "value": "[[parameters('StorageMinimumTlsVersion')]"
                  }
                }
              }
            ]
          },
          "name": "enforce-encrypt-transit"
        },
        {
          "properties": {
            "description": "Deploy Azure Security Center configuration",
            "displayName": "Deploy Azure Security Center configuration",
            "parameters": {
              "emailSecurityContact": {
                "type": "string",
                "metadata": {
                  "displayName": "Security contacts email address",
                  "description": "Provide email address for Azure Security Center contact details"
                }
              },
              "logAnalytics": {
                "type": "String",
                "metadata": {
                  "displayName": "Primary Log Analytics workspace",
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "strongType": "omsWorkspace"
                }
              },
              "ascExportResourceGroupName": {
                "type": "String",
                "metadata": {
                  "displayName": "Resource Group name for the export to Log Analytics workspace configuration",
                  "description": "The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn't exist, it'll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured."
                }
              },
              "ascExportResourceGroupLocation": {
                "type": "String",
                "metadata": {
                  "displayName": "Resource Group location for the export to Log Analytics workspace configuration",
                  "description": "The location where the resource group and the export to Log Analytics workspace configuration are created."
                }
              },
              "pricingTierVMs": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for Virtual Machines",
                  "description": "Azure Defender pricing tier for Virtual Machines"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierSqlServers": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for SQL Servers",
                  "description": "Azure Defender pricing tier for SQL Servers"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierAppServices": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for App Services",
                  "description": "Azure Defender pricing tier for App Services"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierStorageAccounts": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for Storage Accounts",
                  "description": "Azure Defender pricing tier for Storage Accounts"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierSqlServerVirtualMachines": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for SQL Server Virtual Machines",
                  "description": "Azure Defender pricing tier for SQL Server Virtual Machines"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierKubernetesService": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for AKS",
                  "description": "Azure Defender pricing tier for AKS"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierContainerRegistry": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for ACR",
                  "description": "Azure Defender pricing tier for ACR"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierKeyVaults": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for AKV",
                  "description": "Azure Defender pricing tier for AKV"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierDns": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for DNS",
                  "description": "Azure Defender pricing tier for DNS"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              },
              "pricingTierArm": {
                "type": "string",
                "metadata": {
                  "displayName": "Azure Defender pricing tier for Azure Resource Manager",
                  "description": "Azure Defender pricing tier for Azure Resource Manager"
                },
                "allowedValues": [
                  "Standard",
                  "Free"
                ],
                "defaultValue": "Standard"
              }
            },
            "metadata": {
              "version": "1.0.0",
              "category": "Security Center"
            },
            "PolicyDefinitions": [
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-vms')]",
                "policyDefinitionReferenceId": "defenderForVM",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierVMs')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-Sql')]",
                "policyDefinitionReferenceId": "defenderForSqlServers",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierSqlServers')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-appservice')]",
                "policyDefinitionReferenceId": "defenderForAppServices",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierAppServices')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-sa')]",
                "policyDefinitionReferenceId": "defenderForStorageAccounts",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierStorageAccounts')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-sqlvm')]",
                "policyDefinitionReferenceId": "defenderForSqlServerVirtualMachines",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierSqlServerVirtualMachines')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-aks')]",
                "policyDefinitionReferenceId": "defenderForKubernetesService",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierKubernetesService')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-acr')]",
                "policyDefinitionReferenceId": "defenderForContainerRegistry",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierContainerRegistry')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-akv')]",
                "policyDefinitionReferenceId": "defenderForKeyVaults",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierKeyVaults')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-dns')]",
                "policyDefinitionReferenceId": "defenderForDns",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierDns')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-defender-arm')]",
                "policyDefinitionReferenceId": "defenderForArm",
                "parameters": {
                  "pricingTier": {
                    "value": "[[parameters('pricingTierArm')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-asc-security-contacts')]",
                "policyDefinitionReferenceId": "securityEmailContact",
                "parameters": {
                  "emailSecurityContact": {
                    "value": "[[parameters('emailSecurityContact')]"
                  }
                }
              },
              {
                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9",
                "policyDefinitionReferenceId": "ascExport",
                "parameters": {
                  "resourceGroupName": {
                    "value": "[[parameters('ascExportResourceGroupName')]"
                  },
                  "resourceGroupLocation": {
                    "value": "[[parameters('ascExportResourceGroupLocation')]"
                  },
                  "workspaceResourceId": {
                    "value": "[[parameters('logAnalytics')]"

                  }
                }
              }
            ]
          },
          "name": "deploy-asc-config"
        },
        {
          "properties": {
            "Description": "This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included ",
            "DisplayName": "Deploy Diagnostic Settings for Azure Services",
            "Parameters": {
              "logAnalytics": {
                "metadata": {
                  "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                  "displayName": "Log Analytics workspace",
                  "strongType": "omsWorkspace"
                },
                "type": "String"
              },
              "profileName": {
                "type": "string",
                "defaultValue": "setByPolicy",
                "metadata": {
                  "displayName": "Profile name",
                  "description": "The diagnostic settings profile name"
                }
              },
              "ACILogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Container Instances to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled."
                }
              },
              "ACRLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Container Registry to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled."
                }
              },
              "AKSLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled."
                }
              },
              "AnalysisServiceLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "APIMgmtLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for API Management to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "ApplicationInsightsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Application Insights to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Application Insights to stream to a Log Analytics workspace when any Application Insights which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "ApplicationGatewayLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "ASELogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for App Service Environments to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for App Service Environments to stream to a Log Analytics workspace when any App Service Environments which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "AADDSLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Azure AD Domain Services to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Azure AD Domain Services to stream to a Log Analytics workspace when any Azure AD Domain Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "AutomationLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Azure AD Domain Services to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Azure AD Domain Services to stream to a Log Analytics workspace when any Azure AD Domain Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "BastionLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Bastion to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Bastion to stream to a Log Analytics workspace when any Bastion which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "BatchLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Batch to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "BlobStorageLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Blob Storage to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Blob Storage to stream to a Log Analytics workspace when any Blob Storage which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "FileStorageLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for File Storage to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for File Storage to stream to a Log Analytics workspace when any File Storage which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "QueueStorageLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Queue Storage to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Queue Storage to stream to a Log Analytics workspace when any Queue Storage which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "TableStorageLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Table Storage to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Table Storage to stream to a Log Analytics workspace when any Table Storage which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "CDNEndpointsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "CDNProfilesLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for CDN Profiles to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for CDN Profiles to stream to a Log Analytics workspace when any CDN Profiles which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "CognitiveServicesLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "CosmosLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "DatabricksLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Databricks to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "DataFactoryLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Data Factory to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "DataLakeStoreLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "DataLakeAnalyticsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "EventGridSubLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "EventGridTopicLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "EventHubLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "EventSystemTopicLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "ExpressRouteLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "FirewallLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Firewall to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "FrontDoorLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Front Door to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "FunctionAppLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "HDInsightLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for HDInsight to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "IotHubLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "KeyVaultLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Key Vault to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "LoadBalancerLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "LogAnalyticsWorkspaceLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Log Analytics Workspace to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Log Analytics Workspace to stream to a Log Analytics workspace when any Log Analytics Workspace which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "LogicAppsISELogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "LogicAppsWFLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "MariaDBLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for MariaDB to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "MlWorkspaceLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "MySQLLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "NetworkSecurityGroupsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "NetworkNICLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "PostgreSQLLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "PowerBIEmbeddedLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "NetworkPublicIPNicLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "RecoveryVaultLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "RedisCacheLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "RelayLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Relay to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "SearchServicesLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Search Services to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "ServiceBusLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Service Bus namespaces to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "SignalRLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for SignalR to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "StorageAccountsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any Storage Accounts which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "SQLDBsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for SQL Databases to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "SQLElasticPoolsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "SQLMLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "StreamAnalyticsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "TimeSeriesInsightsLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "TrafficManagerLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "VirtualNetworkLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "VirtualMachinesLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "VMSSLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Virtual Machine Scale Sets to stream to a Log Analytics workspace when any Virtual Machine Scale Sets which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "VNetGWLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled."
                }
              },
              "AppServiceLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              },
              "AppServiceWebappLogAnalyticsEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy Diagnostic Settings for App Service to Log Analytics workspace",
                  "description": "Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics and category enabled"
                }
              }
            },
            "PolicyDefinitionGroups": null,
            "metadata": {
              "version": "1.0.0",
              "category": "Monitoring"
            },
            "PolicyDefinitions": [
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-aci')]",
                "policyDefinitionReferenceId": "ACIDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ACILogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-acr')]",
                "policyDefinitionReferenceId": "ACRDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ACRLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-aks')]",
                "policyDefinitionReferenceId": "AKSDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('AKSLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-analysis-service')]",
                "policyDefinitionReferenceId": "AnalysisServiceDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('AnalysisServiceLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-api-mgmt')]",
                "policyDefinitionReferenceId": "APIMgmtDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('APIMgmtLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-application-insights')]",
                "policyDefinitionReferenceId": "ApplicationInsightsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ApplicationInsightsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-application-gateway')]",
                "policyDefinitionReferenceId": "ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ApplicationGatewayLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-ase')]",
                "policyDefinitionReferenceId": "ASEDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ASELogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-aadds')]",
                "policyDefinitionReferenceId": "AADDSDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('AADDSLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-aa')]",
                "policyDefinitionReferenceId": "AutomationDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('AutomationLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-bastion')]",
                "policyDefinitionReferenceId": "BastionDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('BastionLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-batch')]",
                "policyDefinitionReferenceId": "BatchDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('BatchLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-blob-storage')]",
                "policyDefinitionReferenceId": "BlobStorageDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('BlobStorageLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-file-storage')]",
                "policyDefinitionReferenceId": "FileStorageDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('FileStorageLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-queue-storage')]",
                "policyDefinitionReferenceId": "QueueStorageDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('QueueStorageLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-table-storage')]",
                "policyDefinitionReferenceId": "TableStorageDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('TableStorageLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-cdn-endpoints')]",
                "policyDefinitionReferenceId": "CDNEndpointsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('CDNEndpointsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-cdn-profiles')]",
                "policyDefinitionReferenceId": "CDNProfilesDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('CDNProfilesLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-cognitive-services')]",
                "policyDefinitionReferenceId": "CognitiveServicesDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('CognitiveServicesLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-cosmos-db')]",
                "policyDefinitionReferenceId": "CosmosDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('CosmosLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-databricks')]",
                "policyDefinitionReferenceId": "DatabricksDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('DatabricksLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-data-factory')]",
                "policyDefinitionReferenceId": "DataFactoryDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('DataFactoryLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-data-lake-store')]",
                "policyDefinitionReferenceId": "DataLakeStoreDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('DataLakeStoreLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-dl-analytics')]",
                "policyDefinitionReferenceId": "DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('DataLakeAnalyticsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-event-grid-sub')]",
                "policyDefinitionReferenceId": "EventGridSubDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('EventGridSubLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-event-grid-topic')]",
                "policyDefinitionReferenceId": "EventGridTopicDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('EventGridTopicLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-event-hub')]",
                "policyDefinitionReferenceId": "EventHubDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('EventHubLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-event-grid-system-topic')]",
                "policyDefinitionReferenceId": "EventSystemTopicDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('EventSystemTopicLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-expressroute')]",
                "policyDefinitionReferenceId": "ExpressRouteDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ExpressRouteLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-firewall')]",
                "policyDefinitionReferenceId": "FirewallDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('FirewallLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-front-door')]",
                "policyDefinitionReferenceId": "FrontDoorDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('FrontDoorLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-function')]",
                "policyDefinitionReferenceId": "FunctionAppDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('FunctionAppLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-hd-insight')]",
                "policyDefinitionReferenceId": "HDInsightDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('HDInsightLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-iot-hub')]",
                "policyDefinitionReferenceId": "IotHubDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('IotHubLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-key-vault')]",
                "policyDefinitionReferenceId": "KeyVaultDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('KeyVaultLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-load-balancer')]",
                "policyDefinitionReferenceId": "LoadBalancerDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('LoadBalancerLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-log-analytics-workspace')]",
                "policyDefinitionReferenceId": "LogAnalyticsWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('LogAnalyticsWorkspaceLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-logic-apps-ise')]",
                "policyDefinitionReferenceId": "LogicAppsISEDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('LogicAppsISELogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-logic-apps-wf')]",
                "policyDefinitionReferenceId": "LogicAppsWFDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('LogicAppsWFLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-maria-db')]",
                "policyDefinitionReferenceId": "MariaDBDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('MariaDBLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-ml-workspace')]",
                "policyDefinitionReferenceId": "MlWorkspaceDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('MlWorkspaceLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-mysql')]",
                "policyDefinitionReferenceId": "MySQLDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('MySQLLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-network-security-groups')]",
                "policyDefinitionReferenceId": "NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('NetworkSecurityGroupsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-nic')]",
                "policyDefinitionReferenceId": "NetworkNICDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('NetworkNICLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-postgresql')]",
                "policyDefinitionReferenceId": "PostgreSQLDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('PostgreSQLLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-power-bi-embedded')]",
                "policyDefinitionReferenceId": "PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('PowerBIEmbeddedLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-public-ip')]",
                "policyDefinitionReferenceId": "NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('NetworkPublicIPNicLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-recovery-vault')]",
                "policyDefinitionReferenceId": "RecoveryVaultDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('RecoveryVaultLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-redis-cache')]",
                "policyDefinitionReferenceId": "RedisCacheDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('RedisCacheLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-relay')]",
                "policyDefinitionReferenceId": "RelayDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('RelayLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-search-services')]",
                "policyDefinitionReferenceId": "SearchServicesDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('SearchServicesLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-service-bus')]",
                "policyDefinitionReferenceId": "ServiceBusDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('ServiceBusLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-signalr')]",
                "policyDefinitionReferenceId": "SignalRDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('SignalRLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-storage-accounts')]",
                "policyDefinitionReferenceId": "StorageAccountsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('StorageAccountsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-sqldbs')]",
                "policyDefinitionReferenceId": "SQLDBsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('SQLDBsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-sql-elastic-pools')]",
                "policyDefinitionReferenceId": "SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('SQLElasticPoolsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-sql-mi')]",
                "policyDefinitionReferenceId": "SQLMDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('SQLMLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-stream-analytics')]",
                "policyDefinitionReferenceId": "StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('StreamAnalyticsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-time-series-insights')]",
                "policyDefinitionReferenceId": "TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('TimeSeriesInsightsLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-traffic-manager')]",
                "policyDefinitionReferenceId": "TrafficManagerDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('TrafficManagerLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-virtual-network')]",
                "policyDefinitionReferenceId": "VirtualNetworkDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VirtualNetworkLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-vm')]",
                "policyDefinitionReferenceId": "VirtualMachinesDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VirtualMachinesLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-vmss')]",
                "policyDefinitionReferenceId": "VMSSDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VMSSLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-vnet-gw')]",
                "policyDefinitionReferenceId": "VNetGWDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('VNetGWLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-web-server-farm')]",
                "policyDefinitionReferenceId": "AppServiceDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('AppServiceLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-diagnostics-website')]",
                "policyDefinitionReferenceId": "AppServiceWebappDeployDiagnosticLogDeployLogAnalytics",
                "parameters": {
                  "logAnalytics": {
                    "value": "[[parameters('logAnalytics')]"
                  },
                  "effect": {
                    "value": "[[parameters('AppServiceWebappLogAnalyticsEffect')]"
                  },
                  "profileName": {
                    "value": "[[parameters('profileName')]"
                  }
                }
              }
            ]
          },
          "type": null,
          "name": "deploy-resource-diags"
        },
        {
          "properties": {
            "Description": "This policy denies creation of Azure PaaS resources with exposed public endpoints. This policy set includes the policy for the following services KeyVault, Storage accounts, AKS, Cosmos, SQL Servers, MariaDB, MySQL and Postgress. ",
            "DisplayName": "Public network access should be disabled for PaaS resources",
            "Parameters": {
              "CosmosPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for CosmosDB",
                  "description": "This policy denies that Cosmos database accounts are created with out public network access is disabled."
                }
              },
              "MariaDBPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for MariaDB",
                  "description": "This policy denies the creation of Maria DB accounts with exposed public endpoints"
                }
              },
              "MySQLPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for MySQL",
                  "description": "This policy denies creation of MySql DB accounts with exposed public endpoints"
                }
              },
              "PostgreSQLPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for PostgreSql",
                  "description": "This policy denies creation of Postgre SQL DB accounts with exposed public endpoints"
                }
              },
              "KeyVaultPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for KeyVault",
                  "description": "This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints"
                }
              },
              "SqlServerPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for Azure SQL Database",
                  "description": "This policy denies creation of Sql servers with exposed public endpoints"
                }
              },
              "StoragePublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for Storage accounts",
                  "description": "This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints"
                }
              },
              "AKSPublicIpDenyEffect": {
                "type": "string",
                "defaultValue": "Deny",
                "allowedValues": [
                  "Audit",
                  "Deny",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Public network access should be disabled for AKS API",
                  "description": "This policy denies the creation of Azure Kubernetes Service non-private clusters"
                }
              }
            },
            "PolicyDefinitionGroups": null,
            "metadata": {
              "version": "1.0.0",
              "category": "Network"
            },
            "PolicyDefinitions": [
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-cosmosdb')]",
                "policyDefinitionReferenceId": "CosmosDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('CosmosPublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-mariadb')]",
                "policyDefinitionReferenceId": "MariaDBDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('MariaDBPublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-mysql')]",
                "policyDefinitionReferenceId": "MySQLDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('MySQLPublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-postgresql')]",
                "policyDefinitionReferenceId": "PostgreSQLDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('PostgreSQLPublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-key-vault')]",
                "policyDefinitionReferenceId": "KeyVaultDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('KeyVaultPublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-sql')]",
                "policyDefinitionReferenceId": "SqlServerDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SqlServerPublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-storage')]",
                "policyDefinitionReferenceId": "StorageDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('StoragePublicIpDenyEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deny-public-endpoint-aks')]",
                "policyDefinitionReferenceId": "AKSDenyPaasPublicIP",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('AKSPublicIpDenyEffect')]"
                  }
                }
              }
            ]
          },
          "type": null,
          "name": "deny-public-endpoints"
        },
        {
          "properties": {
            "Description": "Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment",
            "DisplayName": "Deploy SQL Database security configuration",
            "Parameters": {
              "vulnerabilityAssessmentsEmail": {
                "metadata": {
                  "description": "The email address to send alerts",
                  "displayName": "The email address to send alerts"
                },
                "type": "String"
              },
              "vulnerabilityAssessmentsStorageID": {
                "metadata": {
                  "description": "The storage account ID to store assessments",
                  "displayName": "The storage account ID to store assessments"
                },
                "type": "String"
              },
              "SqlDbTdeDeploySqlSecurityEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy SQL Database Transparent Data Encryption ",
                  "description": "Deploy the Transparent Data Encryption when it is not enabled in the deployment"
                }
              },
              "SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy SQL Database security Alert Policies configuration with email admin accounts",
                  "description": "Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration"
                }
              },
              "SqlDbAuditingSettingsDeploySqlSecurityEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy SQL Database auditing settings",
                  "description": "Deploy auditing settings to SQL Database when it not exist in the deployment"
                }
              },
              "SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect": {
                "type": "string",
                "defaultValue": "DeployIfNotExists",
                "allowedValues": [
                  "DeployIfNotExists",
                  "Disabled"
                ],
                "metadata": {
                  "displayName": "Deploy SQL Database vulnerability Assessments",
                  "description": "Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific storage account in the parameters"
                }
              }
            },
            "PolicyDefinitionGroups": null,
            "metadata": {
              "version": "1.0.0",
              "category": "SQL"
            },
            "PolicyDefinitions": [
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-sql-tde')]",
                "policyDefinitionReferenceId": "SqlDbTdeDeploySqlSecurity",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SqlDbTdeDeploySqlSecurityEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-sql-security-alert-policies')]",
                "policyDefinitionReferenceId": "SqlDbSecurityAlertPoliciesDeploySqlSecurity",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-sql-auditing-Settings')]",
                "policyDefinitionReferenceId": "SqlDbAuditingSettingsDeploySqlSecurity",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SqlDbAuditingSettingsDeploySqlSecurityEffect')]"
                  }
                }
              },
              {
                "policyDefinitionId": "[concat(variables('scope'), '/providers/Microsoft.Authorization/policyDefinitions/deploy-sql-vulnerability-assessments')]",
                "policyDefinitionReferenceId": "SqlDbVulnerabilityAssessmentsDeploySqlSecurity",
                "parameters": {
                  "effect": {
                    "value": "[[parameters('SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect')]"
                  },
                  "vulnerabilityAssessmentsEmail": {
                    "value": "[[parameters('vulnerabilityAssessmentsEmail')]"
                  },
                  "vulnerabilityAssessmentsStorageID": {
                    "value": "[[parameters('vulnerabilityAssessmentsStorageID')]"
                  }
                }
              }
            ]
          },
          "type": null,
          "name": "deploy-sql-security"
        }
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "name": "[variables('policies').policyDefinitions[copyIndex()].name]",
      "apiVersion": "[variables('apiVersions').policyDefinitions]",
      "copy": {
        "name": "policyDefinitionCopy",
        "count": "[length(variables('policies').policyDefinitions)]"
      },
      "properties": {
        "displayName": "[variables('policies').policyDefinitions[copyIndex()].properties.displayName]",
        "description": "[variables('policies').policyDefinitions[copyIndex()].properties.description]",
        "mode": "All",
        "policyType": "Custom",
        "parameters": "[variables('policies').policyDefinitions[copyIndex()].properties.parameters]",
        "policyRule": "[variables('policies').policyDefinitions[copyIndex()].properties.policyRule]",
        "metadata": "[variables('policies').policyDefinitions[copyIndex()].properties.metadata]"
      }
    },
    {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "name": "[variables('initiatives').policySetDefinitions[copyIndex()].name]",
      "apiVersion": "[variables('apiVersions').policySetDefinitions]",
      "dependsOn": [
        "policyDefinitionCopy"
      ],
      "copy": {
        "name": "policySetDefinitionCopy",
        "count": "[length(variables('initiatives').policySetDefinitions)]"
      },
      "properties": {
        "displayName": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.displayName]",
        "description": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.description]",
        "parameters": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.parameters]",
        "policyDefinitions": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.policyDefinitions]",
        "metadata": "[variables('initiatives').policySetDefinitions[copyIndex()].properties.metadata]"
      }
    }
  ]
}